[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "data list",
    "section": "",
    "text": "Diamonds\n Loan Data\n Data Science Job Salaries\n Sleep Study\n Used Car Prices in India"
  },
  {
    "objectID": "BBJ_Loan payments(백업).html",
    "href": "BBJ_Loan payments(백업).html",
    "title": "BBJ_Loan payments anal",
    "section": "",
    "text": "변수명\n해석(의미)\n\n\n\n\nLoan_ID\n대출한 고객의 고유한 ID\n\n\nloan_status\n이번 분석의 타겟 변수, 상환 여부를 나타냄\n\n\nPrincipal\n고객이 대출받은 금액\n\n\nterms\n기간\n\n\neffective_date\n실제 계약 효과가 발휘하기 시작한 날짜\n\n\ndue_date\n대출금 납부 기한 날짜\n\n\npaid_off_time\n고객이 은행에 모두 상환한 날짜, 시간\n\n\npast_due_days\n고객이 은행에 대출금을 모두 상환하는데 걸린 기간\n\n\nage\n고객의 나이\n\n\neducation\n고객의 교육 수준\n\n\nGender\n고객의 성별"
  },
  {
    "objectID": "BBJ_Loan payments(백업).html#로지스틱-이항분석-대출상환-성공인가-실패인가",
    "href": "BBJ_Loan payments(백업).html#로지스틱-이항분석-대출상환-성공인가-실패인가",
    "title": "BBJ_Loan payments anal",
    "section": "로지스틱 이항분석 : 대출상환 성공인가, 실패인가?",
    "text": "로지스틱 이항분석 : 대출상환 성공인가, 실패인가?\n=> 전체를 training data로 잡았을 때\n\nstatus <- loan.df$loan_status\nmodel <- glm(status ~ ., data = loan.df,\n             family = binomial(link = \"logit\"))\n\nWarning: glm.fit: algorithm did not converge\n\npred <- factor(ifelse(\n  model$fitted.values > 0.5, \"pred-Success\", \"pred-Failure\")) # 예측값\n\ntab <- table(status, pred)\ntab\n\n         pred\nstatus    pred-Failure pred-Success\n  Failure          200            0\n  Success            0          300\n\nTP <- tab[2, 2] # True, Positive\nTN <- tab[1, 1]\nFP <- tab[2, 1]\nFN <- tab[1, 2] # False, Negative\n\n# 분류 모델의 성능 평가 지표: Evaluation Metric\naccuracy <- (TP + TN) / (TP + TN + FP + FN) # 정확도\naccuracy\n\n[1] 1\n\nprecision <- TP / (TP + FP) # 정밀도\nprecision\n\n[1] 1\n\nrecall <- TP / (TP + FN) # 재현율\nrecall\n\n[1] 1\n\nlibrary(pROC)\n\nType 'citation(\"pROC\")' for a citation.\n\n\n\nAttaching package: 'pROC'\n\n\nThe following object is masked from 'package:colorspace':\n\n    coords\n\n\nThe following objects are masked from 'package:stats':\n\n    cov, smooth, var\n\nroc(status ~ model$fitted.values, data = loan.df,\n    plot = TRUE, main = \"ROC CURVE\", col = 'pink')\n\nSetting levels: control = Failure, case = Success\n\n\nSetting direction: controls < cases\n\n\n\n\n\n\nCall:\nroc.formula(formula = status ~ model$fitted.values, data = loan.df,     plot = TRUE, main = \"ROC CURVE\", col = \"pink\")\n\nData: model$fitted.values in 200 controls (status Failure) < 300 cases (status Success).\nArea under the curve: 1\n\n\n\nTrainging Test 분할 : 객관적인 평가를 위해\n\n# 80 : 20 비율 -> 400개 : 100개\n# \"loan_status\", \"Principal\", \"terms\", \"effective_date\", \"due_date\", \"age\", \"education\", \"Gender\"\n\nset.seed(7)\ntest_index <- sample(1:500, 100, replace = F) # 1 ~ 500 중 100개, replace = F : 중복추출 X\ntrain <- loan.df[-test_index,]\ntest <- loan.df[test_index,]\n\nstr(train)\n\n'data.frame':   400 obs. of  8 variables:\n $ loan_status   : Factor w/ 2 levels \"Failure\",\"Success\": 2 2 2 2 2 2 2 2 2 2 ...\n $ Principal     : int  1000 1000 1000 1000 1000 1000 1000 800 300 1000 ...\n $ terms         : int  30 30 15 30 30 30 30 15 7 15 ...\n $ effective_date: Date, format: \"2016-09-08\" \"2016-09-08\" ...\n $ due_date      : Date, format: \"2016-10-07\" \"2016-10-07\" ...\n $ age           : int  45 50 27 28 29 36 28 26 29 39 ...\n $ education     : Factor w/ 4 levels \"Bechalor\",\"college\",..: 3 1 2 2 2 2 2 2 2 3 ...\n $ Gender        : Factor w/ 2 levels \"female\",\"male\": 2 1 2 1 2 2 2 2 2 2 ...\n\nstr(test)\n\n'data.frame':   100 obs. of  8 variables:\n $ loan_status   : Factor w/ 2 levels \"Failure\",\"Success\": 2 1 1 1 2 2 2 2 2 1 ...\n $ Principal     : int  1000 1000 1000 1000 1000 1000 1000 800 1000 800 ...\n $ terms         : int  30 30 30 30 30 30 30 15 30 15 ...\n $ effective_date: Date, format: \"2016-09-14\" \"2016-09-12\" ...\n $ due_date      : Date, format: \"2016-10-13\" \"2016-10-11\" ...\n $ age           : int  29 26 36 35 30 27 29 31 23 35 ...\n $ education     : Factor w/ 4 levels \"Bechalor\",\"college\",..: 3 3 3 2 2 3 3 3 3 3 ...\n $ Gender        : Factor w/ 2 levels \"female\",\"male\": 2 2 1 1 2 1 2 1 2 2 ...\n\nmodel <- glm(loan_status ~ ., data = train,\n             family = binomial(link = \"logit\"))\n\n# test[, -dim(test)[1]] : loan_status 뺀 것\n\npred <- factor(ifelse(\n  predict(model, test[,-dim(test)[1]], type = 'response') > 0.5, \"pred-Success\",\n  \"pred-Failure\")) # 예측값\n# response를 반환값으로 받음.\n\nlibrary(pROC)\nroc(test$loan_status ~ predict(model, test[, -dim(test)[1]], type = 'response'),\n    plot = TRUE, main = \"ROC CURVE\", col = 'pink', print.auc = T) \n\nSetting levels: control = Failure, case = Success\n\n\nSetting direction: controls < cases\n\n\n\n\n\n\nCall:\nroc.formula(formula = test$loan_status ~ predict(model, test[,     -dim(test)[1]], type = \"response\"), plot = TRUE, main = \"ROC CURVE\",     col = \"pink\", print.auc = T)\n\nData: predict(model, test[, -dim(test)[1]], type = \"response\") in 40 controls (test$loan_status Failure) < 60 cases (test$loan_status Success).\nArea under the curve: 0.7246\n\n\n\nsummary(model)\n\n\nCall:\nglm(formula = loan_status ~ ., family = binomial(link = \"logit\"), \n    data = train)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.7501  -1.1766   0.6775   0.9668   2.0678  \n\nCoefficients:\n                                Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                   -1.057e+04  2.032e+03  -5.200 1.99e-07 ***\nPrincipal                     -1.772e-04  1.178e-03  -0.150    0.880    \nterms                         -7.654e-04  2.113e-02  -0.036    0.971    \neffective_date                 6.490e-01  1.214e-01   5.346 9.01e-08 ***\ndue_date                      -2.921e-02  1.437e-02  -2.033    0.042 *  \nage                           -7.201e-03  1.807e-02  -0.399    0.690    \neducationcollege              -4.218e-02  3.490e-01  -0.121    0.904    \neducationHigh School or Below -1.557e-01  3.480e-01  -0.447    0.655    \neducationMaster or Above       1.360e+01  6.035e+02   0.023    0.982    \nGendermale                    -1.993e-01  3.130e-01  -0.637    0.524    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 538.41  on 399  degrees of freedom\nResidual deviance: 493.54  on 390  degrees of freedom\nAIC: 513.54\n\nNumber of Fisher Scoring iterations: 13\n\n# 오즈비 (odds ratio)\n# 일어날 확률(p) / 일어나지 않을 확률(1-p)\n\n\n\n혼동행렬\n\ntab <- table(test$loan_status, pred)\ntab\n\n         pred\n          pred-Failure pred-Success\n  Failure           12           28\n  Success            7           53\n\nTP <- tab[2, 2] # True, Positive\nTN <- tab[1, 1]\nFP <- tab[2, 1]\nFN <- tab[1, 2] # False, Negative\n\n# 분류 모델의 성능 평가 지표: Evaluation Metric\naccuracy <- (TP + TN) / (TP + TN + FP + FN) # 정확도\naccuracy\n\n[1] 0.65\n\nprecision <- TP / (TP + FP) # 정밀도\nprecision\n\n[1] 0.8833333\n\nrecall <- TP / (TP + FN) # 재현율\nrecall\n\n[1] 0.654321"
  },
  {
    "objectID": "BBJ_Loan payments.html",
    "href": "BBJ_Loan payments.html",
    "title": "BBJ_Loan payments anal",
    "section": "",
    "text": "변수명\n해석(의미)\n\n\n\n\nLoan_ID\n대출한 고객의 고유한 ID\n\n\nloan_status\n이번 분석의 타겟 변수, 상환 여부를 나타냄\n\n\nPrincipal\n고객이 대출받은 금액\n\n\nterms\n기간\n\n\neffective_date\n실제 계약 효과가 발휘하기 시작한 날짜\n\n\ndue_date\n대출금 납부 기한 날짜\n\n\npaid_off_time\n고객이 은행에 모두 상환한 날짜, 시간\n\n\npast_due_days\n고객이 은행에 대출금을 모두 상환하는데 걸린 기간\n\n\nage\n고객의 나이\n\n\neducation\n고객의 교육 수준\n\n\nGender\n고객의 성별"
  },
  {
    "objectID": "BBJ_Loan payments.html#로지스틱-이항분석-대출상환-성공인가-실패인가",
    "href": "BBJ_Loan payments.html#로지스틱-이항분석-대출상환-성공인가-실패인가",
    "title": "BBJ_Loan payments anal",
    "section": "로지스틱 이항분석 : 대출상환 성공인가, 실패인가?",
    "text": "로지스틱 이항분석 : 대출상환 성공인가, 실패인가?\n=> 전체를 training data로 잡았을 때\n\nstatus <- loan.df$loan_status\nmodel <- glm(status ~ ., data = loan.df, # glm() 일반화된 회귀분석\n             family = binomial(link = \"logit\"))\n\nWarning: glm.fit: algorithm did not converge\n\npred <- factor(ifelse(\n  model$fitted.values > 0.5, \"pred-Success\", \"pred-Failure\")) # 예측값\n\ntab <- table(status, pred)\ntab\n\n         pred\nstatus    pred-Failure pred-Success\n  Failure          200            0\n  Success            0          300\n\nTP <- tab[2, 2] # True, Positive\nTN <- tab[1, 1]\nFP <- tab[2, 1]\nFN <- tab[1, 2] # False, Negative\n\n# 분류 모델의 성능 평가 지표: Evaluation Metric\naccuracy <- (TP + TN) / (TP + TN + FP + FN) # 정확도\naccuracy\n\n[1] 1\n\nprecision <- TP / (TP + FP) # 정밀도\nprecision\n\n[1] 1\n\nrecall <- TP / (TP + FN) # 재현율\nrecall\n\n[1] 1\n\nlibrary(pROC)\n\nType 'citation(\"pROC\")' for a citation.\n\n\n\nAttaching package: 'pROC'\n\n\nThe following object is masked from 'package:colorspace':\n\n    coords\n\n\nThe following objects are masked from 'package:stats':\n\n    cov, smooth, var\n\nroc(status ~ model$fitted.values, data = loan.df,\n    plot = TRUE, main = \"ROC CURVE\", col = 'pink')\n\nSetting levels: control = Failure, case = Success\n\n\nSetting direction: controls < cases\n\n\n\n\n\n\nCall:\nroc.formula(formula = status ~ model$fitted.values, data = loan.df,     plot = TRUE, main = \"ROC CURVE\", col = \"pink\")\n\nData: model$fitted.values in 200 controls (status Failure) < 300 cases (status Success).\nArea under the curve: 1\n\n\n\nTrainging Test 분할 : 객관적인 평가를 위해\n\n# 80 : 20 비율 -> 400개 : 100개\n# \"loan_status\", \"Principal\", \"terms\", \"effective_date\", \"due_date\", \"age\", \"education\", \"Gender\"\n\nset.seed(7)\ntest_index <- sample(1:500, 100, replace = F) # 1 ~ 500 중 100개, replace = F : 중복추출 X\ntrain <- loan.df[-test_index,]\ntest <- loan.df[test_index,]\n\nstr(train)\n\n'data.frame':   400 obs. of  8 variables:\n $ loan_status   : Factor w/ 2 levels \"Failure\",\"Success\": 2 2 2 2 2 2 2 2 2 2 ...\n $ Principal     : int  1000 1000 1000 1000 1000 1000 1000 800 300 1000 ...\n $ terms         : int  30 30 15 30 30 30 30 15 7 15 ...\n $ effective_date: Date, format: \"2016-09-08\" \"2016-09-08\" ...\n $ due_date      : Date, format: \"2016-10-07\" \"2016-10-07\" ...\n $ age           : int  45 50 27 28 29 36 28 26 29 39 ...\n $ education     : Factor w/ 4 levels \"Bechalor\",\"college\",..: 3 1 2 2 2 2 2 2 2 3 ...\n $ Gender        : Factor w/ 2 levels \"female\",\"male\": 2 1 2 1 2 2 2 2 2 2 ...\n\nstr(test)\n\n'data.frame':   100 obs. of  8 variables:\n $ loan_status   : Factor w/ 2 levels \"Failure\",\"Success\": 2 1 1 1 2 2 2 2 2 1 ...\n $ Principal     : int  1000 1000 1000 1000 1000 1000 1000 800 1000 800 ...\n $ terms         : int  30 30 30 30 30 30 30 15 30 15 ...\n $ effective_date: Date, format: \"2016-09-14\" \"2016-09-12\" ...\n $ due_date      : Date, format: \"2016-10-13\" \"2016-10-11\" ...\n $ age           : int  29 26 36 35 30 27 29 31 23 35 ...\n $ education     : Factor w/ 4 levels \"Bechalor\",\"college\",..: 3 3 3 2 2 3 3 3 3 3 ...\n $ Gender        : Factor w/ 2 levels \"female\",\"male\": 2 2 1 1 2 1 2 1 2 2 ...\n\nmodel <- glm(loan_status ~ ., data = train,\n             family = binomial(link = \"logit\")) # 로지스틱 모형\n\n# test[, -dim(test)[1]] : loan_status 뺀 것\n\npred <- factor(ifelse(\n  predict(model, test[,-dim(test)[1]], type = 'response') > 0.5, \"pred-Success\",\n  \"pred-Failure\")) # 예측값\n# response를 반환값으로 받음.\n\nlibrary(pROC)\nroc(test$loan_status ~ predict(model, test[, -dim(test)[1]], type = 'response'),\n    plot = TRUE, main = \"ROC CURVE\", col = 'pink', print.auc = T) \n\nSetting levels: control = Failure, case = Success\n\n\nSetting direction: controls < cases\n\n\n\n\n\n\nCall:\nroc.formula(formula = test$loan_status ~ predict(model, test[,     -dim(test)[1]], type = \"response\"), plot = TRUE, main = \"ROC CURVE\",     col = \"pink\", print.auc = T)\n\nData: predict(model, test[, -dim(test)[1]], type = \"response\") in 40 controls (test$loan_status Failure) < 60 cases (test$loan_status Success).\nArea under the curve: 0.7246\n\n\n\nsummary(model)\n\n\nCall:\nglm(formula = loan_status ~ ., family = binomial(link = \"logit\"), \n    data = train)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.7501  -1.1766   0.6775   0.9668   2.0678  \n\nCoefficients:\n                                Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                   -1.057e+04  2.032e+03  -5.200 1.99e-07 ***\nPrincipal                     -1.772e-04  1.178e-03  -0.150    0.880    \nterms                         -7.654e-04  2.113e-02  -0.036    0.971    \neffective_date                 6.490e-01  1.214e-01   5.346 9.01e-08 ***\ndue_date                      -2.921e-02  1.437e-02  -2.033    0.042 *  \nage                           -7.201e-03  1.807e-02  -0.399    0.690    \neducationcollege              -4.218e-02  3.490e-01  -0.121    0.904    \neducationHigh School or Below -1.557e-01  3.480e-01  -0.447    0.655    \neducationMaster or Above       1.360e+01  6.035e+02   0.023    0.982    \nGendermale                    -1.993e-01  3.130e-01  -0.637    0.524    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 538.41  on 399  degrees of freedom\nResidual deviance: 493.54  on 390  degrees of freedom\nAIC: 513.54\n\nNumber of Fisher Scoring iterations: 13\n\ncat(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\")\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n# 오즈비 (odds ratio)\n# 일어날 확률(p) / 일어나지 않을 확률(1-p)\nexp(coef(model)) # 한 단위가 증가했을 때 1보다 크면 오즈가 증가 => 성공확률이 높아짐.\n\n                  (Intercept)                     Principal \n                 0.000000e+00                  9.998228e-01 \n                        terms                effective_date \n                 9.992349e-01                  1.913557e+00 \n                     due_date                           age \n                 9.712121e-01                  9.928245e-01 \n             educationcollege educationHigh School or Below \n                 9.586990e-01                  8.558420e-01 \n     educationMaster or Above                    Gendermale \n                 8.045692e+05                  8.193115e-01 \n\n\n\n\n혼동행렬\n\ntab <- table(test$loan_status, pred)\ntab\n\n         pred\n          pred-Failure pred-Success\n  Failure           12           28\n  Success            7           53\n\nTP <- tab[2, 2] # True, Positive\nTN <- tab[1, 1]\nFP <- tab[2, 1]\n\n\nFN <- tab[1, 2] # False, Negative\n\n# 분류 모델의 성능 평가 지표: Evaluation Metric\naccuracy <- (TP + TN) / (TP + TN + FP + FN) # 정확도\naccuracy # 정확도 : 현실에 부합할 확률\n\n[1] 0.65\n\nprecision <- TP / (TP + FP) # 정밀도 : 예측 결과가 긍정적일 때 현실도 실제로 긍정일 확률\nprecision\n\n[1] 0.8833333\n\nrecall <- TP / (TP + FN) # 재현율(민감도) : 현실이 긍정일때 예측결과도 긍정적일 확률\nrecall\n\n[1] 0.654321"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "team4_Blue",
    "section": "",
    "text": "정한수 : 조장\n남재환 : 다이아몬드 가격 예측\n박병준 : 대출 상환 성패 여부 분석\n손병립 : 데이터 사이언스 분야 급여 분석\n신민수 : 수면 시간 관련 조사 자료 분석및 예측\n임재원 : 중고차 가격 예측\n\n Our team project code is on this Github Repositories"
  },
  {
    "objectID": "Jaewon_car_price.html#자료형-확인-및-변경",
    "href": "Jaewon_car_price.html#자료형-확인-및-변경",
    "title": "Jaewon_car_price",
    "section": "2-1 자료형 확인 및 변경",
    "text": "2-1 자료형 확인 및 변경\n\nchr -> factor 자료형으로 변경\n\n\ncarDF[sapply(carDF, is.character)] <- lapply(carDF[sapply(carDF, is.character)], as.factor)\ncarDF$year <- as.factor(carDF$year)\ncarDF$LPG <- as.factor(carDF$LPG)\ncarDF$hybrid <- as.factor(carDF$hybrid)\nstr(carDF)\n\n'data.frame':   409 obs. of  13 variables:\n $ sell_price       : int  8620 11150 14570 10687 9324 5680 6910 5463 5710 9254 ...\n $ brand            : Factor w/ 6 levels \"기아\",\"대우\",..: 1 6 6 5 5 1 6 6 6 5 ...\n $ year             : Factor w/ 6 levels \"2010\",\"2011\",..: 6 6 6 6 6 6 6 6 6 6 ...\n $ type             : Factor w/ 5 levels \"경형\",\"대형\",..: 2 2 2 2 2 2 2 2 2 2 ...\n $ mielage          : num  7.6 8.1 7.4 7.5 7.6 9.3 8.9 9 8.5 8 ...\n $ hp               : int  425 416 416 306 306 334 334 315 315 250 ...\n $ torque           : num  52 52 52 45 45 40.3 40.3 40.5 40.5 35 ...\n $ fuel_type        : Factor w/ 3 levels \"LPG\",\"가솔린\",..: 2 2 2 2 2 2 2 2 2 2 ...\n $ LPG              : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ...\n $ hybrid           : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ...\n $ displacement     : int  NA 5038 5038 4966 4966 3778 3778 3778 3778 3598 ...\n $ wt               : int  2105 2065 2145 2070 1960 1940 1915 1930 2000 2070 ...\n $ transmission_type: Factor w/ 2 levels \"수동\",\"자동\": 2 2 2 2 2 2 2 2 2 2 ..."
  },
  {
    "objectID": "Jaewon_car_price.html#결측치-확인-및-처리방안-구상",
    "href": "Jaewon_car_price.html#결측치-확인-및-처리방안-구상",
    "title": "Jaewon_car_price",
    "section": "2-2 결측치 확인 및 처리방안 구상",
    "text": "2-2 결측치 확인 및 처리방안 구상\n\n3군데의 열에서 결측치가 관측되었고 결측치의 수가 얼마되지 않기에 제거해주었음.\n409개 행 -> 407개 행\n\n\ndim(carDF)\n\n[1] 409  13\n\nVIM::aggr(carDF)\n\n\n\ncarDF <- na.omit(carDF)\ndim(carDF)\n\n[1] 407  13\n\nVIM::aggr(carDF)"
  },
  {
    "objectID": "Jaewon_car_price.html#종속변수selling_price-확인",
    "href": "Jaewon_car_price.html#종속변수selling_price-확인",
    "title": "Jaewon_car_price",
    "section": "2-3 종속변수(selling_price) 확인",
    "text": "2-3 종속변수(selling_price) 확인\n\nTarget변수인 sell_price가 왼쪽으로 너무 치우쳐져 있음.\n회귀분석에 있어서 종속변수의 경우 정규분포를 따르는 것이 좋기때문에 log화 해주었음.\n샤피로 테스트 결과 확인.\n\n\nhist(carDF$sell_price)\n\n\n\nqqnorm(carDF$sell_price)\n\n\n\nhist(log(carDF$sell_price))\n\n\n\nqqnorm(log(carDF$sell_price))\n\n\n\nshapiro.test(log(carDF$sell_price))\n\n\n    Shapiro-Wilk normality test\n\ndata:  log(carDF$sell_price)\nW = 0.97123, p-value = 3.431e-07"
  },
  {
    "objectID": "Jaewon_car_price.html#데이터셋에-대한-eda분석",
    "href": "Jaewon_car_price.html#데이터셋에-대한-eda분석",
    "title": "Jaewon_car_price",
    "section": "2-4 데이터셋에 대한 EDA분석",
    "text": "2-4 데이터셋에 대한 EDA분석\n\nsell_price에서 이상치라고는 할 수 없지만 회귀모형 예측률을 높여주기 위해 9이상의 값들 제거.\n\n\npar(mfrow=c(2,3))\nboxplot(log(carDF$sell_price), main = 'sell_price')\nboxplot(carDF$mielage, main = 'mielage')\nboxplot(carDF$hp, main = 'hp')\nboxplot(carDF$torque, main = 'torque')\nboxplot(carDF$displacement, main = 'displacement')\nboxplot(carDF$wt, main = 'wt')\n\n\n\npar(mfrow=c(1,1))\n\ncarDF <- carDF[log(carDF$sell_price) < 9, ]\n\n\n2-4-1 이상치 제거후 sell_prcie확인\n\n이상치를 제거한 후 정규분포를 잘 따르는 것으로 확인되었다.\n\n\nhist(log(carDF$sell_price))\n\n\n\nqqnorm(log(carDF$sell_price))\n\n\n\n\n\n\n2-4-2 범주형 데이터 확인\n\nLPG, hybrid열의 경우 한쪽으로 매우 많이 값이 치우쳐 져있기 때문에, 유의한 변수가 아니라고 판단하여 회귀모델 생성에 사용하지 않을것.\n\n\ng1 <- ggplot(data = carDF, aes(brand)) + geom_bar(aes(fill=brand)) + theme_bw()\ng2 <- ggplot(data = carDF, aes(year)) + geom_bar(aes(fill=year)) + theme_bw()\ng3 <- ggplot(data = carDF, aes(type)) + geom_bar(aes(fill=type)) + theme_bw()\ng4 <- ggplot(data = carDF, aes(fuel_type)) + geom_bar(aes(fill=fuel_type)) + theme_bw()\ng5 <- ggplot(data = carDF, aes(LPG)) + geom_bar(aes(fill=LPG)) + theme_bw()\ng6 <- ggplot(data = carDF, aes(hybrid)) + geom_bar(aes(fill=hybrid)) + theme_bw()\ng7 <- ggplot(data = carDF, aes(transmission_type)) + geom_bar(aes(fill=transmission_type)) + theme_bw()\n(g1 + g2) / (g3 + g4) / (g5 + g6 + g7)"
  },
  {
    "objectID": "Jaewon_car_price.html#종속변수sell_price에-대한-전체변수-회귀모형-fitting",
    "href": "Jaewon_car_price.html#종속변수sell_price에-대한-전체변수-회귀모형-fitting",
    "title": "Jaewon_car_price",
    "section": "3-1 종속변수(sell_price)에 대한 전체변수 회귀모형 fitting",
    "text": "3-1 종속변수(sell_price)에 대한 전체변수 회귀모형 fitting\n\nmodel <- lm(sell_price~., data = carDF)\nsummary(model)\n\n\nCall:\nlm(formula = sell_price ~ ., data = carDF)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1471.57  -179.92    -8.45   184.73  1912.37 \n\nCoefficients:\n                        Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           -3128.8516   487.6597  -6.416 4.20e-10 ***\nbrand대우               646.2011   134.9102   4.790 2.40e-06 ***\nbrand삼성               315.1426   139.0775   2.266 0.024021 *  \nbrand쉐보레              96.9397    61.5448   1.575 0.116070    \nbrand쌍용               658.5089    99.5291   6.616 1.27e-10 ***\nbrand현대               -67.9154    60.0569  -1.131 0.258836    \nyear2011                -48.3083   161.5764  -0.299 0.765119    \nyear2012                110.1205   156.4167   0.704 0.481855    \nyear2013                218.7741   158.2379   1.383 0.167617    \nyear2014                217.5348   156.1018   1.394 0.164276    \nyear2015                370.1917   153.7981   2.407 0.016564 *  \ntype대형              -1050.7043   199.4688  -5.268 2.33e-07 ***\ntype소형               -503.2908    83.7398  -6.010 4.37e-09 ***\ntype준중형             -841.1806   117.8001  -7.141 4.81e-12 ***\ntype중형               -711.2939   157.0391  -4.529 7.95e-06 ***\nmielage                  65.8193    16.8325   3.910 0.000109 ***\nhp                        7.3713     1.7933   4.111 4.85e-05 ***\ntorque                   14.7397     8.5989   1.714 0.087323 .  \nfuel_type가솔린         208.3843   220.7187   0.944 0.345714    \nfuel_type디젤          -327.9175   218.2619  -1.502 0.133830    \nLPG1                    268.5988   218.0947   1.232 0.218878    \nhybrid1                 555.7348   196.3454   2.830 0.004898 ** \ndisplacement              0.5902     0.1265   4.666 4.27e-06 ***\nwt                        1.3226     0.2276   5.810 1.33e-08 ***\ntransmission_type자동   262.1325    50.6145   5.179 3.64e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 400.2 on 377 degrees of freedom\nMultiple R-squared:  0.8671,    Adjusted R-squared:  0.8587 \nF-statistic: 102.5 on 24 and 377 DF,  p-value: < 2.2e-16"
  },
  {
    "objectID": "Jaewon_car_price.html#변수선택forward-backward-stepwise",
    "href": "Jaewon_car_price.html#변수선택forward-backward-stepwise",
    "title": "Jaewon_car_price",
    "section": "3-2 변수선택(‘forward’, ‘backward’, ‘stepwise’)",
    "text": "3-2 변수선택(‘forward’, ‘backward’, ‘stepwise’)\n\n유의하지 않은 변수가 많이 관측된다.\n따라서 3가지의 변수선택법을 사용하여 변수를 필터링 해본다.\n\n\n3-2-1 전진선택법\n\n최종 선택된 유의한 변수 : brand, type, displacement, wt, transmission_type, mielage, torque / 7개\nAdjusted R-squared: 0.8368\n\n\nmodel_forward <- lm(sell_price ~ 1, data = carDF)\nmodel_forward <- step(model_forward, scope=list(lower=model_forward, upper=model), direction = \"forward\")\n\nStart:  AIC=5605.17\nsell_price ~ 1\n\n                    Df Sum of Sq       RSS    AIC\n+ hp                 1 334261102 120226172 5072.6\n+ displacement       1 279740137 174747138 5222.9\n+ wt                 1 252937625 201549649 5280.3\n+ torque             1 230299241 224188033 5323.1\n+ type               4 228333215 226154060 5332.6\n+ mielage            1  94876400 359610874 5513.0\n+ year               5  79834476 374652798 5537.5\n+ transmission_type  1  61792511 392694764 5548.4\n+ brand              5  59443859 395043415 5558.8\n+ fuel_type          2  40812206 413675068 5571.3\n+ LPG                1  14373869 440113405 5594.2\n+ hybrid             1  10490542 443996733 5597.8\n<none>                           454487274 5605.2\n\nStep:  AIC=5072.59\nsell_price ~ hp\n\n                    Df Sum of Sq       RSS    AIC\n+ brand              5  22754010  97472163 4998.2\n+ type               4  16100024 104126148 5022.8\n+ wt                 1   8924061 111302111 5043.6\n+ hybrid             1   7305947 112920226 5049.4\n+ transmission_type  1   5372950 114853223 5056.2\n+ displacement       1   2057952 118168220 5067.6\n+ torque             1   1536034 118690138 5069.4\n+ year               5   3486344 116739829 5070.8\n+ mielage            1    607410 119618762 5072.6\n<none>                           120226172 5072.6\n+ LPG                1    403914 119822258 5073.2\n+ fuel_type          2    621898 119604274 5074.5\n\nStep:  AIC=4998.25\nsell_price ~ hp + brand\n\n                    Df Sum of Sq      RSS    AIC\n+ type               4  14585843 82886320 4941.1\n+ hybrid             1   7001216 90470947 4970.3\n+ transmission_type  1   4866368 92605795 4979.7\n+ wt                 1   4544764 92927398 4981.1\n+ displacement       1   1287211 96184951 4994.9\n+ torque             1    620924 96851239 4997.7\n<none>                           97472163 4998.2\n+ LPG                1     36198 97435964 5000.1\n+ mielage            1     10937 97461225 5000.2\n+ year               5   1661452 95810711 5001.3\n+ fuel_type          2     32827 97439336 5002.1\n\nStep:  AIC=4941.08\nsell_price ~ hp + brand + type\n\n                    Df Sum of Sq      RSS    AIC\n+ hybrid             1   6617364 76268955 4909.6\n+ transmission_type  1   4623254 78263066 4920.0\n+ wt                 1   4499681 78386639 4920.6\n<none>                           82886320 4941.1\n+ displacement       1    359336 82526984 4941.3\n+ torque             1    323190 82563130 4941.5\n+ mielage            1    188171 82698149 4942.2\n+ year               5   1654049 81232270 4943.0\n+ LPG                1      6593 82879726 4943.1\n+ fuel_type          2     33904 82852416 4944.9\n\nStep:  AIC=4909.64\nsell_price ~ hp + brand + type + hybrid\n\n                    Df Sum of Sq      RSS    AIC\n+ wt                 1   5704931 70564024 4880.4\n+ transmission_type  1   3358090 72910865 4893.5\n+ torque             1   1102918 75166037 4905.8\n+ displacement       1    414770 75854185 4909.4\n<none>                           76268955 4909.6\n+ year               5   1826932 74442023 4909.9\n+ mielage            1    113184 76155771 4911.0\n+ LPG                1       292 76268664 4911.6\n+ fuel_type          2    305178 75963778 4912.0\n\nStep:  AIC=4880.38\nsell_price ~ hp + brand + type + hybrid + wt\n\n                    Df Sum of Sq      RSS    AIC\n+ transmission_type  1   2970618 67593406 4865.1\n+ fuel_type          2   1559150 69004874 4875.4\n+ displacement       1    563421 70000603 4879.2\n+ torque             1    369885 70194139 4880.3\n<none>                           70564024 4880.4\n+ year               5   1680248 68883776 4880.7\n+ LPG                1    109246 70454778 4881.8\n+ mielage            1      2591 70561434 4882.4\n\nStep:  AIC=4865.09\nsell_price ~ hp + brand + type + hybrid + wt + transmission_type\n\n               Df Sum of Sq      RSS    AIC\n+ displacement  1    901656 66691749 4861.7\n+ fuel_type     2   1014962 66578444 4863.0\n<none>                      67593406 4865.1\n+ torque        1    232022 67361384 4865.7\n+ mielage       1    159226 67434180 4866.1\n+ LPG           1     68624 67524781 4866.7\n+ year          5   1363971 66229435 4866.9\n\nStep:  AIC=4861.69\nsell_price ~ hp + brand + type + hybrid + wt + transmission_type + \n    displacement\n\n            Df Sum of Sq      RSS    AIC\n+ year       5   2170320 64521430 4858.4\n+ fuel_type  2    985702 65706048 4859.7\n+ mielage    1    428987 66262763 4861.1\n<none>                   66691749 4861.7\n+ LPG        1    125093 66566657 4862.9\n+ torque     1     51052 66640697 4863.4\n\nStep:  AIC=4858.39\nsell_price ~ hp + brand + type + hybrid + wt + transmission_type + \n    displacement + year\n\n            Df Sum of Sq      RSS    AIC\n+ mielage    1    891212 63630218 4854.8\n+ fuel_type  2    825758 63695672 4857.2\n<none>                   64521430 4858.4\n+ LPG        1     67472 64453957 4860.0\n+ torque     1     26134 64495296 4860.2\n\nStep:  AIC=4854.8\nsell_price ~ hp + brand + type + hybrid + wt + transmission_type + \n    displacement + year + mielage\n\n            Df Sum of Sq      RSS    AIC\n+ fuel_type  2   2676916 60953302 4841.5\n+ torque     1    766140 62864079 4851.9\n<none>                   63630218 4854.8\n+ LPG        1    121889 63508329 4856.0\n\nStep:  AIC=4841.52\nsell_price ~ hp + brand + type + hybrid + wt + transmission_type + \n    displacement + year + mielage + fuel_type\n\n         Df Sum of Sq      RSS    AIC\n+ torque  1    325691 60627611 4841.4\n<none>                60953302 4841.5\n+ LPG     1     97999 60855303 4842.9\n\nStep:  AIC=4841.37\nsell_price ~ hp + brand + type + hybrid + wt + transmission_type + \n    displacement + year + mielage + fuel_type + torque\n\n       Df Sum of Sq      RSS    AIC\n<none>              60627611 4841.4\n+ LPG   1    242942 60384669 4841.8\n\nsummary(model_forward)\n\n\nCall:\nlm(formula = sell_price ~ hp + brand + type + hybrid + wt + transmission_type + \n    displacement + year + mielage + fuel_type + torque, data = carDF)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1469.24  -181.79    -6.72   185.69  1908.30 \n\nCoefficients:\n                        Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           -2842.9488   429.1527  -6.625 1.20e-10 ***\nhp                        7.8937     1.7436   4.527 8.02e-06 ***\nbrand대우               654.8641   134.8188   4.857 1.75e-06 ***\nbrand삼성               323.0243   139.0251   2.323 0.020682 *  \nbrand쉐보레             103.7930    61.3346   1.692 0.091424 .  \nbrand쌍용               660.7410    99.5806   6.635 1.13e-10 ***\nbrand현대               -61.8634    59.8964  -1.033 0.302339    \ntype대형              -1083.0835   197.8637  -5.474 8.04e-08 ***\ntype소형               -514.0606    83.3389  -6.168 1.78e-09 ***\ntype준중형             -863.4130   116.4882  -7.412 8.22e-13 ***\ntype중형               -738.2166   155.6164  -4.744 2.98e-06 ***\nhybrid1                 575.0221   195.8536   2.936 0.003528 ** \nwt                        1.3522     0.2265   5.970 5.48e-09 ***\ntransmission_type자동   258.5859    50.5670   5.114 5.03e-07 ***\ndisplacement              0.5687     0.1254   4.536 7.69e-06 ***\nyear2011                -55.0935   161.5928  -0.341 0.733338    \nyear2012                103.6479   156.4352   0.663 0.508015    \nyear2013                202.7578   157.8103   1.285 0.199642    \nyear2014                205.4090   155.8975   1.318 0.188439    \nyear2015                354.7835   153.3931   2.313 0.021264 *  \nmielage                  63.0049    16.6881   3.775 0.000185 ***\nfuel_type가솔린         -33.2115   101.2345  -0.328 0.743044    \nfuel_type디젤          -518.8002   153.7797  -3.374 0.000819 ***\ntorque                   11.7696     8.2594   1.425 0.154984    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 400.5 on 378 degrees of freedom\nMultiple R-squared:  0.8666,    Adjusted R-squared:  0.8585 \nF-statistic: 106.8 on 23 and 378 DF,  p-value: < 2.2e-16\n\n\n\n\n3-2-2 후진선택법\n\n최종 선택된 유의한 변수 : brand, type, displacement, wt, transmission_type, mielage, torque / 7개\nAdjusted R-squared: 0.8368\n\n\nmodel_backward <- lm(sell_price ~ 1, data = carDF)\nmodel_backward <- step(model, scope=list(lower=model_backward, upper=model), direction = \"backward\")\n\nStart:  AIC=4841.76\nsell_price ~ brand + year + type + mielage + hp + torque + fuel_type + \n    LPG + hybrid + displacement + wt + transmission_type\n\n                    Df Sum of Sq      RSS    AIC\n- LPG                1    242942 60627611 4841.4\n<none>                           60384669 4841.8\n- torque             1    470634 60855303 4842.9\n- hybrid             1   1283155 61667824 4848.2\n- fuel_type          2   2347102 62731771 4853.1\n- mielage            1   2449027 62833696 4855.7\n- year               5   3757905 64142574 4856.0\n- hp                 1   2706338 63091007 4857.4\n- displacement       1   3487690 63872359 4862.3\n- transmission_type  1   4296136 64680805 4867.4\n- wt                 1   5406727 65791396 4874.2\n- type               4  10187209 70571878 4896.4\n- brand              5  14301236 74685904 4917.2\n\nStep:  AIC=4841.37\nsell_price ~ brand + year + type + mielage + hp + torque + fuel_type + \n    hybrid + displacement + wt + transmission_type\n\n                    Df Sum of Sq      RSS    AIC\n<none>                           60627611 4841.4\n- torque             1    325691 60953302 4841.5\n- hybrid             1   1382563 62010174 4848.4\n- fuel_type          2   2236467 62864079 4851.9\n- mielage            1   2286205 62913816 4854.3\n- year               5   3614734 64242345 4854.7\n- hp                 1   3287408 63915020 4860.6\n- displacement       1   3300763 63928374 4860.7\n- transmission_type  1   4194245 64821857 4866.3\n- wt                 1   5715774 66343386 4875.6\n- type               4  10785263 71412875 4899.2\n- brand              5  14391451 75019063 4917.0\n\nsummary(model_backward)\n\n\nCall:\nlm(formula = sell_price ~ brand + year + type + mielage + hp + \n    torque + fuel_type + hybrid + displacement + wt + transmission_type, \n    data = carDF)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1469.24  -181.79    -6.72   185.69  1908.30 \n\nCoefficients:\n                        Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           -2842.9488   429.1527  -6.625 1.20e-10 ***\nbrand대우               654.8641   134.8188   4.857 1.75e-06 ***\nbrand삼성               323.0243   139.0251   2.323 0.020682 *  \nbrand쉐보레             103.7930    61.3346   1.692 0.091424 .  \nbrand쌍용               660.7410    99.5806   6.635 1.13e-10 ***\nbrand현대               -61.8634    59.8964  -1.033 0.302339    \nyear2011                -55.0935   161.5928  -0.341 0.733338    \nyear2012                103.6479   156.4352   0.663 0.508015    \nyear2013                202.7578   157.8103   1.285 0.199642    \nyear2014                205.4090   155.8975   1.318 0.188439    \nyear2015                354.7835   153.3931   2.313 0.021264 *  \ntype대형              -1083.0835   197.8637  -5.474 8.04e-08 ***\ntype소형               -514.0606    83.3389  -6.168 1.78e-09 ***\ntype준중형             -863.4130   116.4882  -7.412 8.22e-13 ***\ntype중형               -738.2166   155.6164  -4.744 2.98e-06 ***\nmielage                  63.0049    16.6881   3.775 0.000185 ***\nhp                        7.8937     1.7436   4.527 8.02e-06 ***\ntorque                   11.7696     8.2594   1.425 0.154984    \nfuel_type가솔린         -33.2115   101.2345  -0.328 0.743044    \nfuel_type디젤          -518.8002   153.7797  -3.374 0.000819 ***\nhybrid1                 575.0221   195.8536   2.936 0.003528 ** \ndisplacement              0.5687     0.1254   4.536 7.69e-06 ***\nwt                        1.3522     0.2265   5.970 5.48e-09 ***\ntransmission_type자동   258.5859    50.5670   5.114 5.03e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 400.5 on 378 degrees of freedom\nMultiple R-squared:  0.8666,    Adjusted R-squared:  0.8585 \nF-statistic: 106.8 on 23 and 378 DF,  p-value: < 2.2e-16\n\n\n\n\n3-2-3 단계선택법\n\n최종 선택된 유의한 변수 : brand, type, displacement, wt, transmission_type, mielage, torque / 7개\nAdjusted R-squared: 0.8368\n\n\nmodel_both <- lm(sell_price ~ 1, data = carDF)\nmodel_both <- step(model_both, scope=list(lower=model_both, upper=model), direction = \"both\")\n\nStart:  AIC=5605.17\nsell_price ~ 1\n\n                    Df Sum of Sq       RSS    AIC\n+ hp                 1 334261102 120226172 5072.6\n+ displacement       1 279740137 174747138 5222.9\n+ wt                 1 252937625 201549649 5280.3\n+ torque             1 230299241 224188033 5323.1\n+ type               4 228333215 226154060 5332.6\n+ mielage            1  94876400 359610874 5513.0\n+ year               5  79834476 374652798 5537.5\n+ transmission_type  1  61792511 392694764 5548.4\n+ brand              5  59443859 395043415 5558.8\n+ fuel_type          2  40812206 413675068 5571.3\n+ LPG                1  14373869 440113405 5594.2\n+ hybrid             1  10490542 443996733 5597.8\n<none>                           454487274 5605.2\n\nStep:  AIC=5072.59\nsell_price ~ hp\n\n                    Df Sum of Sq       RSS    AIC\n+ brand              5  22754010  97472163 4998.2\n+ type               4  16100024 104126148 5022.8\n+ wt                 1   8924061 111302111 5043.6\n+ hybrid             1   7305947 112920226 5049.4\n+ transmission_type  1   5372950 114853223 5056.2\n+ displacement       1   2057952 118168220 5067.6\n+ torque             1   1536034 118690138 5069.4\n+ year               5   3486344 116739829 5070.8\n+ mielage            1    607410 119618762 5072.6\n<none>                           120226172 5072.6\n+ LPG                1    403914 119822258 5073.2\n+ fuel_type          2    621898 119604274 5074.5\n- hp                 1 334261102 454487274 5605.2\n\nStep:  AIC=4998.25\nsell_price ~ hp + brand\n\n                    Df Sum of Sq       RSS    AIC\n+ type               4  14585843  82886320 4941.1\n+ hybrid             1   7001216  90470947 4970.3\n+ transmission_type  1   4866368  92605795 4979.7\n+ wt                 1   4544764  92927398 4981.1\n+ displacement       1   1287211  96184951 4994.9\n+ torque             1    620924  96851239 4997.7\n<none>                            97472163 4998.2\n+ LPG                1     36198  97435964 5000.1\n+ mielage            1     10937  97461225 5000.2\n+ year               5   1661452  95810711 5001.3\n+ fuel_type          2     32827  97439336 5002.1\n- brand              5  22754010 120226172 5072.6\n- hp                 1 297571253 395043415 5558.8\n\nStep:  AIC=4941.08\nsell_price ~ hp + brand + type\n\n                    Df Sum of Sq       RSS    AIC\n+ hybrid             1   6617364  76268955 4909.6\n+ transmission_type  1   4623254  78263066 4920.0\n+ wt                 1   4499681  78386639 4920.6\n<none>                            82886320 4941.1\n+ displacement       1    359336  82526984 4941.3\n+ torque             1    323190  82563130 4941.5\n+ mielage            1    188171  82698149 4942.2\n+ year               5   1654049  81232270 4943.0\n+ LPG                1      6593  82879726 4943.1\n+ fuel_type          2     33904  82852416 4944.9\n- type               4  14585843  97472163 4998.2\n- brand              5  21239828 104126148 5022.8\n- hp                 1 128648365 211534685 5315.7\n\nStep:  AIC=4909.64\nsell_price ~ hp + brand + type + hybrid\n\n                    Df Sum of Sq       RSS    AIC\n+ wt                 1   5704931  70564024 4880.4\n+ transmission_type  1   3358090  72910865 4893.5\n+ torque             1   1102918  75166037 4905.8\n+ displacement       1    414770  75854185 4909.4\n<none>                            76268955 4909.6\n+ year               5   1826932  74442023 4909.9\n+ mielage            1    113184  76155771 4911.0\n+ LPG                1       292  76268664 4911.6\n+ fuel_type          2    305178  75963778 4912.0\n- hybrid             1   6617364  82886320 4941.1\n- type               4  14201992  90470947 4970.3\n- brand              5  21939432  98208388 5001.3\n- hp                 1 133266704 209535659 5313.9\n\nStep:  AIC=4880.38\nsell_price ~ hp + brand + type + hybrid + wt\n\n                    Df Sum of Sq       RSS    AIC\n+ transmission_type  1   2970618  67593406 4865.1\n+ fuel_type          2   1559150  69004874 4875.4\n+ displacement       1    563421  70000603 4879.2\n+ torque             1    369885  70194139 4880.3\n<none>                            70564024 4880.4\n+ year               5   1680248  68883776 4880.7\n+ LPG                1    109246  70454778 4881.8\n+ mielage            1      2591  70561434 4882.4\n- wt                 1   5704931  76268955 4909.6\n- hybrid             1   7822615  78386639 4920.6\n- type               4  16128254  86692278 4955.1\n- brand              5  18082368  88646392 4962.1\n- hp                 1 110165685 180729709 5256.5\n\nStep:  AIC=4865.09\nsell_price ~ hp + brand + type + hybrid + wt + transmission_type\n\n                    Df Sum of Sq       RSS    AIC\n+ displacement       1    901656  66691749 4861.7\n+ fuel_type          2   1014962  66578444 4863.0\n<none>                            67593406 4865.1\n+ torque             1    232022  67361384 4865.7\n+ mielage            1    159226  67434180 4866.1\n+ LPG                1     68624  67524781 4866.7\n+ year               5   1363971  66229435 4866.9\n- transmission_type  1   2970618  70564024 4880.4\n- wt                 1   5317459  72910865 4893.5\n- hybrid             1   6460705  74054111 4899.8\n- type               4  14834541  82427947 4936.9\n- brand              5  16913946  84507352 4944.9\n- hp                 1  93418415 161011821 5212.0\n\nStep:  AIC=4861.69\nsell_price ~ hp + brand + type + hybrid + wt + transmission_type + \n    displacement\n\n                    Df Sum of Sq       RSS    AIC\n+ year               5   2170320  64521430 4858.4\n+ fuel_type          2    985702  65706048 4859.7\n+ mielage            1    428987  66262763 4861.1\n<none>                            66691749 4861.7\n+ LPG                1    125093  66566657 4862.9\n+ torque             1     51052  66640697 4863.4\n- displacement       1    901656  67593406 4865.1\n- transmission_type  1   3308854  70000603 4879.2\n- wt                 1   5482751  72174501 4891.5\n- hybrid             1   6492006  73183755 4897.0\n- type               4  15724776  82416525 4938.8\n- brand              5  17468256  84160006 4945.2\n- hp                 1  35576438 102268187 5031.6\n\nStep:  AIC=4858.39\nsell_price ~ hp + brand + type + hybrid + wt + transmission_type + \n    displacement + year\n\n                    Df Sum of Sq      RSS    AIC\n+ mielage            1    891212 63630218 4854.8\n+ fuel_type          2    825758 63695672 4857.2\n<none>                           64521430 4858.4\n+ LPG                1     67472 64453957 4860.0\n+ torque             1     26134 64495296 4860.2\n- year               5   2170320 66691749 4861.7\n- displacement       1   1708005 66229435 4866.9\n- transmission_type  1   3074950 67596380 4875.1\n- wt                 1   5397930 69919359 4888.7\n- hybrid             1   6792468 71313898 4896.6\n- brand              5  15204988 79726418 4933.5\n- type               4  15649697 80171127 4937.7\n- hp                 1  25481507 90002937 4990.2\n\nStep:  AIC=4854.8\nsell_price ~ hp + brand + type + hybrid + wt + transmission_type + \n    displacement + year + mielage\n\n                    Df Sum of Sq      RSS    AIC\n+ fuel_type          2   2676916 60953302 4841.5\n+ torque             1    766140 62864079 4851.9\n<none>                           63630218 4854.8\n+ LPG                1    121889 63508329 4856.0\n- mielage            1    891212 64521430 4858.4\n- year               5   2632544 66262763 4861.1\n- displacement       1   2310692 65940910 4867.1\n- transmission_type  1   3831591 67461809 4876.3\n- hybrid             1   4431525 68061743 4879.9\n- wt                 1   5846591 69476809 4888.1\n- type               4  14823113 78453331 4931.0\n- brand              5  15573317 79203535 4932.8\n- hp                 1  21558712 85188930 4970.1\n\nStep:  AIC=4841.52\nsell_price ~ hp + brand + type + hybrid + wt + transmission_type + \n    displacement + year + mielage + fuel_type\n\n                    Df Sum of Sq      RSS    AIC\n+ torque             1    325691 60627611 4841.4\n<none>                           60953302 4841.5\n+ LPG                1     97999 60855303 4842.9\n- hybrid             1   1261745 62215047 4847.8\n- year               5   3624921 64578224 4854.7\n- fuel_type          2   2676916 63630218 4854.8\n- mielage            1   2742369 63695672 4857.2\n- displacement       1   2977983 63931285 4858.7\n- transmission_type  1   4379871 65333174 4867.4\n- wt                 1   8025435 68978738 4889.2\n- type               4  11259685 72212988 4901.7\n- hp                 1  11693364 72646666 4910.1\n- brand              5  14712365 75665667 4918.4\n\nStep:  AIC=4841.37\nsell_price ~ hp + brand + type + hybrid + wt + transmission_type + \n    displacement + year + mielage + fuel_type + torque\n\n                    Df Sum of Sq      RSS    AIC\n<none>                           60627611 4841.4\n- torque             1    325691 60953302 4841.5\n+ LPG                1    242942 60384669 4841.8\n- hybrid             1   1382563 62010174 4848.4\n- fuel_type          2   2236467 62864079 4851.9\n- mielage            1   2286205 62913816 4854.3\n- year               5   3614734 64242345 4854.7\n- hp                 1   3287408 63915020 4860.6\n- displacement       1   3300763 63928374 4860.7\n- transmission_type  1   4194245 64821857 4866.3\n- wt                 1   5715774 66343386 4875.6\n- type               4  10785263 71412875 4899.2\n- brand              5  14391451 75019063 4917.0\n\nsummary(model_both)\n\n\nCall:\nlm(formula = sell_price ~ hp + brand + type + hybrid + wt + transmission_type + \n    displacement + year + mielage + fuel_type + torque, data = carDF)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1469.24  -181.79    -6.72   185.69  1908.30 \n\nCoefficients:\n                        Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           -2842.9488   429.1527  -6.625 1.20e-10 ***\nhp                        7.8937     1.7436   4.527 8.02e-06 ***\nbrand대우               654.8641   134.8188   4.857 1.75e-06 ***\nbrand삼성               323.0243   139.0251   2.323 0.020682 *  \nbrand쉐보레             103.7930    61.3346   1.692 0.091424 .  \nbrand쌍용               660.7410    99.5806   6.635 1.13e-10 ***\nbrand현대               -61.8634    59.8964  -1.033 0.302339    \ntype대형              -1083.0835   197.8637  -5.474 8.04e-08 ***\ntype소형               -514.0606    83.3389  -6.168 1.78e-09 ***\ntype준중형             -863.4130   116.4882  -7.412 8.22e-13 ***\ntype중형               -738.2166   155.6164  -4.744 2.98e-06 ***\nhybrid1                 575.0221   195.8536   2.936 0.003528 ** \nwt                        1.3522     0.2265   5.970 5.48e-09 ***\ntransmission_type자동   258.5859    50.5670   5.114 5.03e-07 ***\ndisplacement              0.5687     0.1254   4.536 7.69e-06 ***\nyear2011                -55.0935   161.5928  -0.341 0.733338    \nyear2012                103.6479   156.4352   0.663 0.508015    \nyear2013                202.7578   157.8103   1.285 0.199642    \nyear2014                205.4090   155.8975   1.318 0.188439    \nyear2015                354.7835   153.3931   2.313 0.021264 *  \nmielage                  63.0049    16.6881   3.775 0.000185 ***\nfuel_type가솔린         -33.2115   101.2345  -0.328 0.743044    \nfuel_type디젤          -518.8002   153.7797  -3.374 0.000819 ***\ntorque                   11.7696     8.2594   1.425 0.154984    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 400.5 on 378 degrees of freedom\nMultiple R-squared:  0.8666,    Adjusted R-squared:  0.8585 \nF-statistic: 106.8 on 23 and 378 DF,  p-value: < 2.2e-16\n\n\n\n\n3-2-4 결론\n\n3가지의 변수선택법 모두 7개의 변수가 유의하다고 나오므로 7개의 변수를 독립변수로써 사용.\n하지만 7개라는 많은 변수는 자칫 모형이 복잡해질수도 있고, 과적합의 문제가 발생할 수도 있다."
  },
  {
    "objectID": "Jaewon_car_price.html#다중공선성-진단.",
    "href": "Jaewon_car_price.html#다중공선성-진단.",
    "title": "Jaewon_car_price",
    "section": "3-3 다중공선성 진단.",
    "text": "3-3 다중공선성 진단.\n\n일반적으로 회귀분석에서는 독립변수(설명변수)들이 모두 독립이라고 가정한다. 그래야 알아보고자 하는 변수의 영향력만을 오롯이 알 수 있기 때문이다.\n만약 두 독립변수가 서로에게 영향을 주고 있다면? 회귀모델의 설명력이 낮아진다.\n\n\n3-3-1 산점도 그래프\n\n잘 보이진 않지만 wt ~ torque, displacement ~ torque 등 상관관계가 높아보이는 변수들이 보인다.\n\n\npairs(~ brand + type + displacement + wt + transmission_type + mielage + torque, data = carDF, pch = 21, bg = c(\"red\", \"blue\", \"green\"))\n\n\n\n\n\n\n3-3-2 vif(분산팽창요인)을 사용하여 다중공선성 계산\n\n가장 높은 값을 가지는 wt(중량)을 제거한 후 회귀모형을 다시 만들어 주었다.\n\n\nmodel <- lm(sell_price ~ brand + type + displacement + wt + transmission_type + mielage + torque, data = carDF)\nvif(model)\n\n                       GVIF Df GVIF^(1/(2*Df))\nbrand              2.045807  5        1.074203\ntype              19.049075  4        1.445387\ndisplacement       5.815123  1        2.411457\nwt                18.276223  1        4.275070\ntransmission_type  1.167902  1        1.080695\nmielage            2.875318  1        1.695676\ntorque             6.590290  1        2.567156\n\nmodel <- lm(sell_price ~ brand + type + displacement + transmission_type + mielage + torque, data = carDF)"
  },
  {
    "objectID": "Jaewon_car_price.html#회귀모형-진단",
    "href": "Jaewon_car_price.html#회귀모형-진단",
    "title": "Jaewon_car_price",
    "section": "3-3 회귀모형 진단",
    "text": "3-3 회귀모형 진단\n\n선형성, 정규성은 만족, 등분산성에서 아쉬운 모습을 보여주지만, 그래도 괜찮은 회귀모형이 만들어졌다.\n\n\nplot(model)"
  },
  {
    "objectID": "Jaewon_car_price.html#상한과-하한을-설정하여-구간안에-들어오면-예측성공한-것으로-판단.전체-데이터-사용",
    "href": "Jaewon_car_price.html#상한과-하한을-설정하여-구간안에-들어오면-예측성공한-것으로-판단.전체-데이터-사용",
    "title": "Jaewon_car_price",
    "section": "4-1 상한과 하한을 설정하여 구간안에 들어오면 예측성공한 것으로 판단.(전체 데이터 사용)",
    "text": "4-1 상한과 하한을 설정하여 구간안에 들어오면 예측성공한 것으로 판단.(전체 데이터 사용)\n\npre라는 데이터프레임 생성, fit값과 상한, 하한값을 저장, 실제 자동차의 sell_price가 예측범위 안에 들어온다면 TRUE로 판단.\n\n\nmodel <- lm(sell_price ~ brand + type + displacement + transmission_type + mielage + torque, data = carDF)\npre <- predict(model, test_modedl = carDF, interval = \"prediction\")\n\nWarning in predict.lm(model, test_modedl = carDF, interval = \"prediction\"): predictions on current data refer to _future_ responses\n\npre <- as.data.frame(pre)\npre <- cbind(pre, carDF$sell_price)\nSuccess <- NA\npre <- cbind(pre, Success)\npre$Success[pre$'carDF$sell_price' >= pre$lwr & pre$'carDF$sell_price' <= pre$upr] <- T\npre$Success[is.na(pre$Success)] <- F\nhead(pre)\n\n        fit      lwr      upr carDF$sell_price Success\n6  4633.287 3593.528 5673.045             5680   FALSE\n7  4668.985 3630.317 5707.653             6910   FALSE\n8  4676.570 3637.872 5715.269             5463    TRUE\n9  4662.375 3623.805 5700.945             5710   FALSE\n11 5099.584 4045.144 6154.024             6565   FALSE\n12 5113.779 4059.521 6168.037             6095    TRUE\n\n\n\n4-1-1 성공한 비율을 계산하여 회귀모형의 예측률을 계산\n\nRMSE값(평균 제곱근 오차, 잔차 측정의 척도): 507.9306\n예측 성공률: 약 93%\n\n\nsqrt(sum(sapply(carDF[, 1] - predict(model, carDF[, -1]), FUN = function(x) {x^2})) / dim(carDF)[1])\n\n[1] 504.6225\n\nsum(pre$Success==\"TRUE\")/dim(pre)[1]\n\n[1] 0.9378109"
  },
  {
    "objectID": "Jaewon_car_price.html#상한과-하한을-설정하여-구간안에-들어오면-예측성공한-것으로-판단.train---test-데이터-분할",
    "href": "Jaewon_car_price.html#상한과-하한을-설정하여-구간안에-들어오면-예측성공한-것으로-판단.train---test-데이터-분할",
    "title": "Jaewon_car_price",
    "section": "4-2 상한과 하한을 설정하여 구간안에 들어오면 예측성공한 것으로 판단.(train - test 데이터 분할)",
    "text": "4-2 상한과 하한을 설정하여 구간안에 들어오면 예측성공한 것으로 판단.(train - test 데이터 분할)\n\nset.seed(1)\ntest_index<- sample(1:dim(carDF)[1], as.integer(dim(carDF)[1]*0.2) , replace = F)\ntrain_df <- carDF[-test_index,]\ntest_df <- carDF[test_index,]\n\nmodel <- lm(sell_price ~ brand + type + displacement + transmission_type + mielage + torque, data = train_df)\n\npre <- predict(model, test_df[, -1], interval = \"prediction\")\npre <- as.data.frame(pre)\npre <- cbind(pre, test_df$sell_price)\nSuccess <- NA\npre <- cbind(pre, Success)\npre$Success[pre$'test_df$sell_price' >= pre$lwr & pre$'test_df$sell_price' <= pre$upr] <- T\npre$Success[is.na(pre$Success)] <- F\nhead(pre)\n\n         fit       lwr      upr test_df$sell_price Success\n331 1274.167  272.1275 2276.207               1940    TRUE\n174 2458.088 1459.3586 3456.817               2283    TRUE\n136 2228.679 1227.8482 3229.510               1885    TRUE\n306 1333.718  332.7501 2334.686               1104    TRUE\n277 1689.811  681.1268 2698.496               1445    TRUE\n194 2895.936 1880.7366 3911.135               3464    TRUE\n\n\n\n4-2-1 성공한 비율을 계산하여 회귀모형의 예측률을 계산\n\nRMSE값(평균 제곱근 오차): 603.4126\n예측 성공률: 약 96%\n\n\nsqrt(sum(sapply(test_df[, 1] - predict(model, test_df[, -1]), FUN = function(x) {x^2})) / dim(test_df)[1])\n\n[1] 603.4126\n\nsum(pre$Success==\"TRUE\")/dim(pre)[1]\n\n[1] 0.8875"
  },
  {
    "objectID": "NJH_dia.html",
    "href": "NJH_dia.html",
    "title": "DIAMOND_NJH",
    "section": "",
    "text": "범주형 변수로 만들기\n\nlevels(factor(DIA1$cut))\n\n[1] \"Fair\"      \"Good\"      \"Ideal\"     \"Premium\"   \"Very Good\"\n\nf.cut = factor(DIA1$cut, levels = c('Fair','Good','Very Good','Premium','Ideal'))\nDIA1$cut=f.cut\n\nlevels(factor(DIA1$color))\n\n[1] \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\"\n\nf.color = factor(DIA1$color, levels = c('J','I','H','G','F','E','D'))\nDIA1$color=f.color\n\nlevels(factor(DIA1$clarity))\n\n[1] \"I1\"   \"IF\"   \"SI1\"  \"SI2\"  \"VS1\"  \"VS2\"  \"VVS1\" \"VVS2\"\n\nf.clarity = factor(DIA1$clarity, levels = c('IF','VVS1','VVS2','VS1','VS2','SI1','SI2','I1'))\nDIA1$clarity=f.clarity\nstr(DIA1)\n\n'data.frame':   53940 obs. of  11 variables:\n $ X      : int  1 2 3 4 5 6 7 8 9 10 ...\n $ carat  : num  0.23 0.21 0.23 0.29 0.31 0.24 0.24 0.26 0.22 0.23 ...\n $ cut    : Factor w/ 5 levels \"Fair\",\"Good\",..: 5 4 2 4 2 3 3 3 1 3 ...\n $ color  : Factor w/ 7 levels \"J\",\"I\",\"H\",\"G\",..: 6 6 6 2 1 1 2 3 6 3 ...\n $ clarity: Factor w/ 8 levels \"IF\",\"VVS1\",\"VVS2\",..: 7 6 4 5 7 3 2 6 5 4 ...\n $ depth  : num  61.5 59.8 56.9 62.4 63.3 62.8 62.3 61.9 65.1 59.4 ...\n $ table  : num  55 61 65 58 58 57 57 55 61 61 ...\n $ price  : int  326 326 327 334 335 336 336 337 337 338 ...\n $ x      : num  3.95 3.89 4.05 4.2 4.34 3.94 3.95 4.07 3.87 4 ...\n $ y      : num  3.98 3.84 4.07 4.23 4.35 3.96 3.98 4.11 3.78 4.05 ...\n $ z      : num  2.43 2.31 2.31 2.63 2.75 2.48 2.47 2.53 2.49 2.39 ...\n\n\n\n\ncut 더미변수 만들기\n\nlevels(DIA1$cut)\n\n[1] \"Fair\"      \"Good\"      \"Very Good\" \"Premium\"   \"Ideal\"    \n\ntapply(DIA1$price, DIA1$cut, mean)\n\n     Fair      Good Very Good   Premium     Ideal \n 4358.758  3928.864  3981.760  4584.258  3457.542 \n\ncuts.lm <- lm(price ~ cut, data = DIA1)\nsummary(cuts.lm)\n\n\nCall:\nlm(formula = price ~ cut, data = DIA1)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n -4258  -2741  -1494   1360  15348 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   4358.76      98.79  44.122  < 2e-16 ***\ncutGood       -429.89     113.85  -3.776 0.000160 ***\ncutVery Good  -377.00     105.16  -3.585 0.000338 ***\ncutPremium     225.50     104.40   2.160 0.030772 *  \ncutIdeal      -901.22     102.41  -8.800  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3964 on 53935 degrees of freedom\nMultiple R-squared:  0.01286,   Adjusted R-squared:  0.01279 \nF-statistic: 175.7 on 4 and 53935 DF,  p-value: < 2.2e-16\n\n#contrasts(DIA1$cut)\n\n#color 더미변수 만들기\nlevels(DIA1$color)\n\n[1] \"J\" \"I\" \"H\" \"G\" \"F\" \"E\" \"D\"\n\ntapply(DIA1$price, DIA1$color, mean)\n\n       J        I        H        G        F        E        D \n5323.818 5091.875 4486.669 3999.136 3724.886 3076.752 3169.954 \n\ncolors.lm <- lm(price ~ color, data = DIA1)\nsummary(colors.lm)\n\n\nCall:\nlm(formula = price ~ color, data = DIA1)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n -4989  -2619  -1376   1374  15654 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  5323.82      74.10  71.843   <2e-16 ***\ncolorI       -231.94      91.30  -2.541   0.0111 *  \ncolorH       -837.15      85.72  -9.766   <2e-16 ***\ncolorG      -1324.68      82.81 -15.997   <2e-16 ***\ncolorF      -1598.93      84.30 -18.966   <2e-16 ***\ncolorE      -2247.07      84.05 -26.733   <2e-16 ***\ncolorD      -2153.86      88.13 -24.439   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3927 on 53933 degrees of freedom\nMultiple R-squared:  0.03128,   Adjusted R-squared:  0.03117 \nF-statistic: 290.2 on 6 and 53933 DF,  p-value: < 2.2e-16\n\n#contrasts(DIA1$color)\n\n#clarity 더미변수 만들기\nlevels(DIA1$clarity)\n\n[1] \"IF\"   \"VVS1\" \"VVS2\" \"VS1\"  \"VS2\"  \"SI1\"  \"SI2\"  \"I1\"  \n\ntapply(DIA1$price, DIA1$clarity, mean)\n\n      IF     VVS1     VVS2      VS1      VS2      SI1      SI2       I1 \n2864.839 2523.115 3283.737 3839.455 3924.989 3996.001 5063.029 3924.169 \n\nclaritys.lm <- lm(price ~ clarity, data = DIA1)\nsummary(colors.lm)\n\n\nCall:\nlm(formula = price ~ color, data = DIA1)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n -4989  -2619  -1376   1374  15654 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  5323.82      74.10  71.843   <2e-16 ***\ncolorI       -231.94      91.30  -2.541   0.0111 *  \ncolorH       -837.15      85.72  -9.766   <2e-16 ***\ncolorG      -1324.68      82.81 -15.997   <2e-16 ***\ncolorF      -1598.93      84.30 -18.966   <2e-16 ***\ncolorE      -2247.07      84.05 -26.733   <2e-16 ***\ncolorD      -2153.86      88.13 -24.439   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3927 on 53933 degrees of freedom\nMultiple R-squared:  0.03128,   Adjusted R-squared:  0.03117 \nF-statistic: 290.2 on 6 and 53933 DF,  p-value: < 2.2e-16\n\n#contrasts(DIA1$clarity)\n#str(DIA1)\n\n\n\n가격과 캐럿의 관계\n\nstr(DIA1)\n\n'data.frame':   53940 obs. of  11 variables:\n $ X      : int  1 2 3 4 5 6 7 8 9 10 ...\n $ carat  : num  0.23 0.21 0.23 0.29 0.31 0.24 0.24 0.26 0.22 0.23 ...\n $ cut    : Factor w/ 5 levels \"Fair\",\"Good\",..: 5 4 2 4 2 3 3 3 1 3 ...\n $ color  : Factor w/ 7 levels \"J\",\"I\",\"H\",\"G\",..: 6 6 6 2 1 1 2 3 6 3 ...\n $ clarity: Factor w/ 8 levels \"IF\",\"VVS1\",\"VVS2\",..: 7 6 4 5 7 3 2 6 5 4 ...\n $ depth  : num  61.5 59.8 56.9 62.4 63.3 62.8 62.3 61.9 65.1 59.4 ...\n $ table  : num  55 61 65 58 58 57 57 55 61 61 ...\n $ price  : int  326 326 327 334 335 336 336 337 337 338 ...\n $ x      : num  3.95 3.89 4.05 4.2 4.34 3.94 3.95 4.07 3.87 4 ...\n $ y      : num  3.98 3.84 4.07 4.23 4.35 3.96 3.98 4.11 3.78 4.05 ...\n $ z      : num  2.43 2.31 2.31 2.63 2.75 2.48 2.47 2.53 2.49 2.39 ...\n\ndf <- DIA1\nplot(price ~ carat, data = df, pch = 19, col = \"steelblue\")\n\n\nformula <- price ~ carat\nmodel <- lm(price ~ carat, data = df)\nmodel\n\n\nCall:\nlm(formula = price ~ carat, data = df)\n\nCoefficients:\n(Intercept)        carat  \n      -2256         7756  \n\nabline(model, lwd=2, col='tomato')\n\n\n\nsummary(model)\n\n\nCall:\nlm(formula = price ~ carat, data = df)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-18585.3   -804.8    -18.9    537.4  12731.7 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -2256.36      13.06  -172.8   <2e-16 ***\ncarat        7756.43      14.07   551.4   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1549 on 53938 degrees of freedom\nMultiple R-squared:  0.8493,    Adjusted R-squared:  0.8493 \nF-statistic: 3.041e+05 on 1 and 53938 DF,  p-value: < 2.2e-16\n\n\n\n\n가격과 세공의 관계\n\nstr(DIA1)\n\n'data.frame':   53940 obs. of  11 variables:\n $ X      : int  1 2 3 4 5 6 7 8 9 10 ...\n $ carat  : num  0.23 0.21 0.23 0.29 0.31 0.24 0.24 0.26 0.22 0.23 ...\n $ cut    : Factor w/ 5 levels \"Fair\",\"Good\",..: 5 4 2 4 2 3 3 3 1 3 ...\n $ color  : Factor w/ 7 levels \"J\",\"I\",\"H\",\"G\",..: 6 6 6 2 1 1 2 3 6 3 ...\n $ clarity: Factor w/ 8 levels \"IF\",\"VVS1\",\"VVS2\",..: 7 6 4 5 7 3 2 6 5 4 ...\n $ depth  : num  61.5 59.8 56.9 62.4 63.3 62.8 62.3 61.9 65.1 59.4 ...\n $ table  : num  55 61 65 58 58 57 57 55 61 61 ...\n $ price  : int  326 326 327 334 335 336 336 337 337 338 ...\n $ x      : num  3.95 3.89 4.05 4.2 4.34 3.94 3.95 4.07 3.87 4 ...\n $ y      : num  3.98 3.84 4.07 4.23 4.35 3.96 3.98 4.11 3.78 4.05 ...\n $ z      : num  2.43 2.31 2.31 2.63 2.75 2.48 2.47 2.53 2.49 2.39 ...\n\ndf <- DIA1\nplot(price ~ cut, data = df, pch = 19, col = \"skyblue\")\n\n\n\nformula <- price ~ cut\nmodel <- lm(price ~ cut, data = df)\nmodel\n\n\nCall:\nlm(formula = price ~ cut, data = df)\n\nCoefficients:\n (Intercept)       cutGood  cutVery Good    cutPremium      cutIdeal  \n      4358.8        -429.9        -377.0         225.5        -901.2  \n\nsummary(model)\n\n\nCall:\nlm(formula = price ~ cut, data = df)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n -4258  -2741  -1494   1360  15348 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   4358.76      98.79  44.122  < 2e-16 ***\ncutGood       -429.89     113.85  -3.776 0.000160 ***\ncutVery Good  -377.00     105.16  -3.585 0.000338 ***\ncutPremium     225.50     104.40   2.160 0.030772 *  \ncutIdeal      -901.22     102.41  -8.800  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3964 on 53935 degrees of freedom\nMultiple R-squared:  0.01286,   Adjusted R-squared:  0.01279 \nF-statistic: 175.7 on 4 and 53935 DF,  p-value: < 2.2e-16\n\n\n\n\n가격과 투명도의 관계\n\nstr(DIA1)\n\n'data.frame':   53940 obs. of  11 variables:\n $ X      : int  1 2 3 4 5 6 7 8 9 10 ...\n $ carat  : num  0.23 0.21 0.23 0.29 0.31 0.24 0.24 0.26 0.22 0.23 ...\n $ cut    : Factor w/ 5 levels \"Fair\",\"Good\",..: 5 4 2 4 2 3 3 3 1 3 ...\n $ color  : Factor w/ 7 levels \"J\",\"I\",\"H\",\"G\",..: 6 6 6 2 1 1 2 3 6 3 ...\n $ clarity: Factor w/ 8 levels \"IF\",\"VVS1\",\"VVS2\",..: 7 6 4 5 7 3 2 6 5 4 ...\n $ depth  : num  61.5 59.8 56.9 62.4 63.3 62.8 62.3 61.9 65.1 59.4 ...\n $ table  : num  55 61 65 58 58 57 57 55 61 61 ...\n $ price  : int  326 326 327 334 335 336 336 337 337 338 ...\n $ x      : num  3.95 3.89 4.05 4.2 4.34 3.94 3.95 4.07 3.87 4 ...\n $ y      : num  3.98 3.84 4.07 4.23 4.35 3.96 3.98 4.11 3.78 4.05 ...\n $ z      : num  2.43 2.31 2.31 2.63 2.75 2.48 2.47 2.53 2.49 2.39 ...\n\ndf <- DIA1\n\nplot(price ~ clarity, data = df, pch = 19, col = \"steelblue\")\n\n\n\nformula <- price ~ clarity\nmodel <- lm(price ~ clarity, data = df)\n#model\n#abline(model, lwd=2, col='tomato')\nsummary(model)\n\n\nCall:\nlm(formula = price ~ clarity, data = df)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n -4737  -2727  -1429   1262  16254 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  2864.84      93.01  30.801  < 2e-16 ***\nclarityVVS1  -341.72     113.53  -3.010 0.002613 ** \nclarityVVS2   418.90     108.20   3.871 0.000108 ***\nclarityVS1    974.62     102.70   9.490  < 2e-16 ***\nclarityVS2   1060.15      99.57  10.647  < 2e-16 ***\nclaritySI1   1131.16      99.18  11.405  < 2e-16 ***\nclaritySI2   2198.19     101.66  21.622  < 2e-16 ***\nclarityI1    1059.33     171.90   6.163 7.21e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3935 on 53932 degrees of freedom\nMultiple R-squared:  0.02715,   Adjusted R-squared:  0.02702 \nF-statistic:   215 on 7 and 53932 DF,  p-value: < 2.2e-16\n\n\n\n\n가격과 색상의 관계\n\nstr(DIA1)\n\n'data.frame':   53940 obs. of  11 variables:\n $ X      : int  1 2 3 4 5 6 7 8 9 10 ...\n $ carat  : num  0.23 0.21 0.23 0.29 0.31 0.24 0.24 0.26 0.22 0.23 ...\n $ cut    : Factor w/ 5 levels \"Fair\",\"Good\",..: 5 4 2 4 2 3 3 3 1 3 ...\n $ color  : Factor w/ 7 levels \"J\",\"I\",\"H\",\"G\",..: 6 6 6 2 1 1 2 3 6 3 ...\n $ clarity: Factor w/ 8 levels \"IF\",\"VVS1\",\"VVS2\",..: 7 6 4 5 7 3 2 6 5 4 ...\n $ depth  : num  61.5 59.8 56.9 62.4 63.3 62.8 62.3 61.9 65.1 59.4 ...\n $ table  : num  55 61 65 58 58 57 57 55 61 61 ...\n $ price  : int  326 326 327 334 335 336 336 337 337 338 ...\n $ x      : num  3.95 3.89 4.05 4.2 4.34 3.94 3.95 4.07 3.87 4 ...\n $ y      : num  3.98 3.84 4.07 4.23 4.35 3.96 3.98 4.11 3.78 4.05 ...\n $ z      : num  2.43 2.31 2.31 2.63 2.75 2.48 2.47 2.53 2.49 2.39 ...\n\ndf <- DIA1\n\nplot(price ~ color, data = df, pch = 19, col = \"steelblue\")\n\n\n\nformula <- price ~ color\nmodel <- lm(price ~ color, data = df)\n#model\n#abline(model, lwd=2, col='tomato')\nsummary(model)\n\n\nCall:\nlm(formula = price ~ color, data = df)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n -4989  -2619  -1376   1374  15654 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  5323.82      74.10  71.843   <2e-16 ***\ncolorI       -231.94      91.30  -2.541   0.0111 *  \ncolorH       -837.15      85.72  -9.766   <2e-16 ***\ncolorG      -1324.68      82.81 -15.997   <2e-16 ***\ncolorF      -1598.93      84.30 -18.966   <2e-16 ***\ncolorE      -2247.07      84.05 -26.733   <2e-16 ***\ncolorD      -2153.86      88.13 -24.439   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3927 on 53933 degrees of freedom\nMultiple R-squared:  0.03128,   Adjusted R-squared:  0.03117 \nF-statistic: 290.2 on 6 and 53933 DF,  p-value: < 2.2e-16\n\n\n\n\n가격과 캐럿,투명도의 관계\n\nstr(DIA1)\n\n'data.frame':   53940 obs. of  11 variables:\n $ X      : int  1 2 3 4 5 6 7 8 9 10 ...\n $ carat  : num  0.23 0.21 0.23 0.29 0.31 0.24 0.24 0.26 0.22 0.23 ...\n $ cut    : Factor w/ 5 levels \"Fair\",\"Good\",..: 5 4 2 4 2 3 3 3 1 3 ...\n $ color  : Factor w/ 7 levels \"J\",\"I\",\"H\",\"G\",..: 6 6 6 2 1 1 2 3 6 3 ...\n $ clarity: Factor w/ 8 levels \"IF\",\"VVS1\",\"VVS2\",..: 7 6 4 5 7 3 2 6 5 4 ...\n $ depth  : num  61.5 59.8 56.9 62.4 63.3 62.8 62.3 61.9 65.1 59.4 ...\n $ table  : num  55 61 65 58 58 57 57 55 61 61 ...\n $ price  : int  326 326 327 334 335 336 336 337 337 338 ...\n $ x      : num  3.95 3.89 4.05 4.2 4.34 3.94 3.95 4.07 3.87 4 ...\n $ y      : num  3.98 3.84 4.07 4.23 4.35 3.96 3.98 4.11 3.78 4.05 ...\n $ z      : num  2.43 2.31 2.31 2.63 2.75 2.48 2.47 2.53 2.49 2.39 ...\n\ndf <- DIA1\n\nplot(price ~ carat+clarity, data = df, pch = 19, col = \"steelblue\")\n\n\n\n\n\n\nformula <- price ~ carat+clarity\nmodel <- lm(price ~ carat+clarity, data = df)\n#model\n#abline(model, lwd=2, col='tomato')\nsummary(model)\n\n\nCall:\nlm(formula = price ~ carat + clarity, data = df)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-17355.1   -639.9   -110.6    480.4  11162.8 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -1398.43      31.24 -44.766   <2e-16 ***\ncarat        8440.06      12.65 667.132   <2e-16 ***\nclarityVVS1  -326.52      37.32  -8.749   <2e-16 ***\nclarityVVS2  -349.82      35.59  -9.829   <2e-16 ***\nclarityVS1   -899.37      33.88 -26.547   <2e-16 ***\nclarityVS2  -1124.24      32.90 -34.173   <2e-16 ***\nclaritySI1  -1783.69      32.90 -54.220   <2e-16 ***\nclaritySI2  -2633.96      34.20 -77.020   <2e-16 ***\nclarityI1   -5513.14      57.37 -96.106   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1294 on 53931 degrees of freedom\nMultiple R-squared:  0.8949,    Adjusted R-squared:  0.8948 \nF-statistic: 5.737e+04 on 8 and 53931 DF,  p-value: < 2.2e-16\n\n\n\n\n가격과 캐럿,세공의 관계\n\nstr(DIA1)\n\n'data.frame':   53940 obs. of  11 variables:\n $ X      : int  1 2 3 4 5 6 7 8 9 10 ...\n $ carat  : num  0.23 0.21 0.23 0.29 0.31 0.24 0.24 0.26 0.22 0.23 ...\n $ cut    : Factor w/ 5 levels \"Fair\",\"Good\",..: 5 4 2 4 2 3 3 3 1 3 ...\n $ color  : Factor w/ 7 levels \"J\",\"I\",\"H\",\"G\",..: 6 6 6 2 1 1 2 3 6 3 ...\n $ clarity: Factor w/ 8 levels \"IF\",\"VVS1\",\"VVS2\",..: 7 6 4 5 7 3 2 6 5 4 ...\n $ depth  : num  61.5 59.8 56.9 62.4 63.3 62.8 62.3 61.9 65.1 59.4 ...\n $ table  : num  55 61 65 58 58 57 57 55 61 61 ...\n $ price  : int  326 326 327 334 335 336 336 337 337 338 ...\n $ x      : num  3.95 3.89 4.05 4.2 4.34 3.94 3.95 4.07 3.87 4 ...\n $ y      : num  3.98 3.84 4.07 4.23 4.35 3.96 3.98 4.11 3.78 4.05 ...\n $ z      : num  2.43 2.31 2.31 2.63 2.75 2.48 2.47 2.53 2.49 2.39 ...\n\ndf <- DIA1\n\nplot(price ~ carat+cut, data = df, pch = 19, col = \"steelblue\")\n\n\n\n\n\n\nformula <- price ~ carat+cut\nmodel <- lm(price ~ carat+cut, data = df)\n#model\n#abline(model, lwd=2, col='tomato')\nsummary(model)\n\n\nCall:\nlm(formula = price ~ carat + cut, data = df)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-17540.7   -791.6    -37.6    522.1  12721.4 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  -3875.47      40.41  -95.91   <2e-16 ***\ncarat         7871.08      13.98  563.04   <2e-16 ***\ncutGood       1120.33      43.50   25.75   <2e-16 ***\ncutVery Good  1510.14      40.24   37.53   <2e-16 ***\ncutPremium    1439.08      39.87   36.10   <2e-16 ***\ncutIdeal      1800.92      39.34   45.77   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1511 on 53934 degrees of freedom\nMultiple R-squared:  0.8565,    Adjusted R-squared:  0.8565 \nF-statistic: 6.437e+04 on 5 and 53934 DF,  p-value: < 2.2e-16\n\n\n\n\n가격과 캐럿,색상의 관계\n\nstr(DIA1)\n\n'data.frame':   53940 obs. of  11 variables:\n $ X      : int  1 2 3 4 5 6 7 8 9 10 ...\n $ carat  : num  0.23 0.21 0.23 0.29 0.31 0.24 0.24 0.26 0.22 0.23 ...\n $ cut    : Factor w/ 5 levels \"Fair\",\"Good\",..: 5 4 2 4 2 3 3 3 1 3 ...\n $ color  : Factor w/ 7 levels \"J\",\"I\",\"H\",\"G\",..: 6 6 6 2 1 1 2 3 6 3 ...\n $ clarity: Factor w/ 8 levels \"IF\",\"VVS1\",\"VVS2\",..: 7 6 4 5 7 3 2 6 5 4 ...\n $ depth  : num  61.5 59.8 56.9 62.4 63.3 62.8 62.3 61.9 65.1 59.4 ...\n $ table  : num  55 61 65 58 58 57 57 55 61 61 ...\n $ price  : int  326 326 327 334 335 336 336 337 337 338 ...\n $ x      : num  3.95 3.89 4.05 4.2 4.34 3.94 3.95 4.07 3.87 4 ...\n $ y      : num  3.98 3.84 4.07 4.23 4.35 3.96 3.98 4.11 3.78 4.05 ...\n $ z      : num  2.43 2.31 2.31 2.63 2.75 2.48 2.47 2.53 2.49 2.39 ...\n\ndf <- DIA1\n\nplot(price ~ carat+color, data = df, pch = 19, col = \"steelblue\")\n\n\n\n\n\n\nformula <- price ~ carat+color\nmodel <- lm(price ~ carat+color, data = df)\n#model\n#abline(model, lwd=2, col='tomato')\nsummary(model)\n\n\nCall:\nlm(formula = price ~ carat + color, data = df)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-18345.1   -765.8    -72.8    558.5  12288.9 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -4050.70      32.21 -125.77   <2e-16 ***\ncarat        8066.62      14.04  574.56   <2e-16 ***\ncolorI        858.74      34.27   25.06   <2e-16 ***\ncolorH       1182.23      32.32   36.58   <2e-16 ***\ncolorG       1828.94      31.51   58.04   <2e-16 ***\ncolorF       1834.21      32.15   57.05   <2e-16 ***\ncolorE       1820.69      32.28   56.40   <2e-16 ***\ncolorD       1914.47      33.78   56.68   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1472 on 53932 degrees of freedom\nMultiple R-squared:  0.864, Adjusted R-squared:  0.8639 \nF-statistic: 4.893e+04 on 7 and 53932 DF,  p-value: < 2.2e-16\n\n\n\n\n가격과 캐럿,투명도,세공, 색상의 관계\n\nstr(DIA1)\n\n'data.frame':   53940 obs. of  11 variables:\n $ X      : int  1 2 3 4 5 6 7 8 9 10 ...\n $ carat  : num  0.23 0.21 0.23 0.29 0.31 0.24 0.24 0.26 0.22 0.23 ...\n $ cut    : Factor w/ 5 levels \"Fair\",\"Good\",..: 5 4 2 4 2 3 3 3 1 3 ...\n $ color  : Factor w/ 7 levels \"J\",\"I\",\"H\",\"G\",..: 6 6 6 2 1 1 2 3 6 3 ...\n $ clarity: Factor w/ 8 levels \"IF\",\"VVS1\",\"VVS2\",..: 7 6 4 5 7 3 2 6 5 4 ...\n $ depth  : num  61.5 59.8 56.9 62.4 63.3 62.8 62.3 61.9 65.1 59.4 ...\n $ table  : num  55 61 65 58 58 57 57 55 61 61 ...\n $ price  : int  326 326 327 334 335 336 336 337 337 338 ...\n $ x      : num  3.95 3.89 4.05 4.2 4.34 3.94 3.95 4.07 3.87 4 ...\n $ y      : num  3.98 3.84 4.07 4.23 4.35 3.96 3.98 4.11 3.78 4.05 ...\n $ z      : num  2.43 2.31 2.31 2.63 2.75 2.48 2.47 2.53 2.49 2.39 ...\n\ndf <- DIA1\n\nplot(price ~ carat+clarity+cut+color, data = df, pch = 19, col = \"steelblue\")\n\n\n\n\n\n\n\n\n\n\n\n\nformula <- price ~ carat+clarity+cut+color\nmodel <- lm(price ~ carat+clarity+cut+color, data = df)\n#model\n#abline(model, lwd=2, col='tomato')\nsummary(model)\n\n\nCall:\nlm(formula = price ~ carat + clarity + cut + color, data = df)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-16813.5   -680.4   -197.6    466.4  10394.9 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  -4268.38      47.31  -90.23   <2e-16 ***\ncarat         8886.13      12.03  738.44   <2e-16 ***\nclarityVVS1   -347.62      33.44  -10.39   <2e-16 ***\nclarityVVS2   -452.45      31.95  -14.16   <2e-16 ***\nclarityVS1    -884.77      30.46  -29.05   <2e-16 ***\nclarityVS2   -1201.82      29.72  -40.44   <2e-16 ***\nclaritySI1   -1845.96      29.86  -61.83   <2e-16 ***\nclaritySI2   -2793.70      31.08  -89.87   <2e-16 ***\nclarityI1    -5419.65      52.14 -103.95   <2e-16 ***\ncutGood        655.77      33.63   19.50   <2e-16 ***\ncutVery Good   848.72      31.28   27.14   <2e-16 ***\ncutPremium     869.40      30.93   28.11   <2e-16 ***\ncutIdeal       998.25      30.66   32.56   <2e-16 ***\ncolorI         884.92      26.96   32.83   <2e-16 ***\ncolorH        1346.52      25.46   52.88   <2e-16 ***\ncolorG        1819.02      24.84   73.23   <2e-16 ***\ncolorF        2021.91      25.34   79.79   <2e-16 ***\ncolorE        2113.54      25.48   82.95   <2e-16 ***\ncolorD        2325.22      26.72   87.01   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1157 on 53921 degrees of freedom\nMultiple R-squared:  0.9159,    Adjusted R-squared:  0.9159 \nF-statistic: 3.264e+04 on 18 and 53921 DF,  p-value: < 2.2e-16\n\n\n\nlibrary(gplots)\n\n\nAttaching package: 'gplots'\n\n\nThe following object is masked from 'package:stats':\n\n    lowess\n\nstr(DIA1)\n\n'data.frame':   53940 obs. of  11 variables:\n $ X      : int  1 2 3 4 5 6 7 8 9 10 ...\n $ carat  : num  0.23 0.21 0.23 0.29 0.31 0.24 0.24 0.26 0.22 0.23 ...\n $ cut    : Factor w/ 5 levels \"Fair\",\"Good\",..: 5 4 2 4 2 3 3 3 1 3 ...\n $ color  : Factor w/ 7 levels \"J\",\"I\",\"H\",\"G\",..: 6 6 6 2 1 1 2 3 6 3 ...\n $ clarity: Factor w/ 8 levels \"IF\",\"VVS1\",\"VVS2\",..: 7 6 4 5 7 3 2 6 5 4 ...\n $ depth  : num  61.5 59.8 56.9 62.4 63.3 62.8 62.3 61.9 65.1 59.4 ...\n $ table  : num  55 61 65 58 58 57 57 55 61 61 ...\n $ price  : int  326 326 327 334 335 336 336 337 337 338 ...\n $ x      : num  3.95 3.89 4.05 4.2 4.34 3.94 3.95 4.07 3.87 4 ...\n $ y      : num  3.98 3.84 4.07 4.23 4.35 3.96 3.98 4.11 3.78 4.05 ...\n $ z      : num  2.43 2.31 2.31 2.63 2.75 2.48 2.47 2.53 2.49 2.39 ...\n\ndf <- DIA1\nboxplot(price ~ clarity,data = df)\n\n\n\nboxplot(price ~ cut, data = df)\n\n\n\nboxplot(price ~ color, data = df)"
  },
  {
    "objectID": "SBR_ds_Salary.html",
    "href": "SBR_ds_Salary.html",
    "title": "team4_Blue",
    "section": "",
    "text": "데이터 출처 : https://www.kaggle.com/datasets/ruchi798/data-science-job-salaries\n\n\n\nsalary_in_usd : 달러화로 환산된 연봉\n\n\n\n\n\nwork_year, experience_level, employment_type, job_title, remote_ratio, company_size\n\n\n\n\n\n\n\n데이터 불러오기\n\n\ndf <- read.csv(\"ds_salaries.csv\")\nstr(df)\n\n'data.frame':   607 obs. of  12 variables:\n $ X                 : int  0 1 2 3 4 5 6 7 8 9 ...\n $ work_year         : int  2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 ...\n $ experience_level  : chr  \"MI\" \"SE\" \"SE\" \"MI\" ...\n $ employment_type   : chr  \"FT\" \"FT\" \"FT\" \"FT\" ...\n $ job_title         : chr  \"Data Scientist\" \"Machine Learning Scientist\" \"Big Data Engineer\" \"Product Data Analyst\" ...\n $ salary            : int  70000 260000 85000 20000 150000 72000 190000 11000000 135000 125000 ...\n $ salary_currency   : chr  \"EUR\" \"USD\" \"GBP\" \"USD\" ...\n $ salary_in_usd     : int  79833 260000 109024 20000 150000 72000 190000 35735 135000 125000 ...\n $ employee_residence: chr  \"DE\" \"JP\" \"GB\" \"HN\" ...\n $ remote_ratio      : int  0 0 50 0 50 100 100 50 100 50 ...\n $ company_location  : chr  \"DE\" \"JP\" \"GB\" \"HN\" ...\n $ company_size      : chr  \"L\" \"S\" \"M\" \"S\" ...\n\n\n\n필요없는 열 제거\n\n\ndf <- df[, -c(1, 6, 7, 9, 11)]\nstr(df)\n\n'data.frame':   607 obs. of  7 variables:\n $ work_year       : int  2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 ...\n $ experience_level: chr  \"MI\" \"SE\" \"SE\" \"MI\" ...\n $ employment_type : chr  \"FT\" \"FT\" \"FT\" \"FT\" ...\n $ job_title       : chr  \"Data Scientist\" \"Machine Learning Scientist\" \"Big Data Engineer\" \"Product Data Analyst\" ...\n $ salary_in_usd   : int  79833 260000 109024 20000 150000 72000 190000 35735 135000 125000 ...\n $ remote_ratio    : int  0 0 50 0 50 100 100 50 100 50 ...\n $ company_size    : chr  \"L\" \"S\" \"M\" \"S\" ...\n\n\n\n결측치 확인\n\n\nsum(is.na(df))\n\n[1] 0\n\n\n\nemployment_type(고용형태)\n\n\nbarplot(table(df$employment_type), las=1)\n\n\n\n\n\nCT(계약직), FL(프리랜서): 안정적인 수입이라 보기 어려움\nPT(파트타임): 노동 시간이 달라 수입의 단순 비교 어려움\n고용형태 FT인 행만 남기고 employment_type열 제거\n\n\ndf <- df[df$employment_type==\"FT\", -3]\nstr(df)\n\n'data.frame':   588 obs. of  6 variables:\n $ work_year       : int  2020 2020 2020 2020 2020 2020 2020 2020 2020 2020 ...\n $ experience_level: chr  \"MI\" \"SE\" \"SE\" \"MI\" ...\n $ job_title       : chr  \"Data Scientist\" \"Machine Learning Scientist\" \"Big Data Engineer\" \"Product Data Analyst\" ...\n $ salary_in_usd   : int  79833 260000 109024 20000 150000 72000 190000 35735 135000 125000 ...\n $ remote_ratio    : int  0 0 50 0 50 100 100 50 100 50 ...\n $ company_size    : chr  \"L\" \"S\" \"M\" \"S\" ...\n\n\n\n\n\n\n\n\nsummary(df$salary_in_usd)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   2859   64962  104197  113468  150000  600000 \n\n\n\nboxplot(df$salary_in_usd, col='skyblue', las=1)\n\n\n\n\n\nhist(df$salary_in_usd, col='skyblue', las=1, ylim=c(0,200),\n     xlab=\"Salary($)\", ylab=\"Frequency\", main=\"Frequency of Salary\")\n\n\n\n\n\n\n\n\nlibrary(car)\n\nLoading required package: carData\n\nqqPlot(df$salary_in_usd, pch=20, col='skyblue', id=F, main=\"Q-Q Plot\", las=1, ylab = '')\n\n\n\n\n\nshapiro.test(df$salary_in_usd)\n\n\n    Shapiro-Wilk normality test\n\ndata:  df$salary_in_usd\nW = 0.90066, p-value < 2.2e-16\n\n\n\n유의수준 0.05에서 귀무가설 기각\n연봉은 정규성을 따르지 않음\n\n\n\n\n\n\n\n\ndf$work_year <- factor(df$work_year)\nbarplot(table(df$work_year), col=c(2,3,4), las=1)\n\n\n\n\n\n\n\n\nleveneTest(df$salary_in_usd ~ df$work_year)\n\nLevene's Test for Homogeneity of Variance (center = median)\n       Df F value Pr(>F)\ngroup   2  1.6388 0.1951\n      585               \n\n\n\n유의수준 0.05에서 각 연도별 연봉은 등분산성을 가짐\n\n\n\n\n\nbarplot(tapply(df$salary_in_usd, df$work_year, mean), col=c(2,3,4), ylim=c(0,150000), las=1)\n\n\n\n\n\n\n\n\nyear.aov <- aov(df$salary_in_usd ~ df$work_year)\nsummary(year.aov)\n\n              Df    Sum Sq   Mean Sq F value   Pr(>F)    \ndf$work_year   2 9.286e+10 4.643e+10   9.911 5.85e-05 ***\nResiduals    585 2.741e+12 4.685e+09                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n유의수준 0.05에서 연도별 연봉의 차이는 존재\n\n\n\n\n\n\n\n\ndf$experience_level <- factor(df$experience_level)\nbarplot(table(df$experience_level), col=c(2:5), ylim=c(0,300), las=1)\n\n\n\n\n\n\n\n\nleveneTest(df$salary_in_usd ~ df$experience_level)\n\nLevene's Test for Homogeneity of Variance (center = median)\n       Df F value    Pr(>F)    \ngroup   3  5.6988 0.0007533 ***\n      584                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n유의수준 0.05에서 각 연도별 연봉은 등분산성가정을 따르지 않음\n\n\n\n\n\nbarplot(tapply(df$salary_in_usd, df$experience_level, mean), col=c(2:5), ylim=c(0,200000), las=1)\n\n\n\n\n\n\n\n\noneway.test(df$salary_in_usd ~ df$experience_level)\n\n\n    One-way analysis of means (not assuming equal variances)\n\ndata:  df$salary_in_usd and df$experience_level\nF = 62.426, num df = 3.000, denom df = 96.392, p-value < 2.2e-16\n\n\n\n유의수준 0.05에서 직급별 연봉의 차이는 존재\n\n\n\n\n\n\n\n\ndf$remote_ratio <- factor(df$remote_ratio, levels=c(0,50,100),\n                              labels=c(\"No\", \"ST\", \"All\"))\nbarplot(table(df$remote_ratio), col=c(2:4), ylim=c(0,400), las=1)\n\n\n\n\n\n\n\n\nleveneTest(df$salary_in_usd ~ df$remote_ratio)\n\nLevene's Test for Homogeneity of Variance (center = median)\n       Df F value  Pr(>F)  \ngroup   2  4.0749 0.01748 *\n      585                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n유의수준 0.05에서 재택근무 빈도별 연봉은 등분산성가정을 따르지 않음\n유의수준 0.01에서는 등분산 가정을 따름\n\n\n\n\n\nbarplot(tapply(df$salary_in_usd, df$remote_ratio, mean), col=c(2:4), ylim=c(0,150000), las=1)\n\n\n\n\n\n\n\n\nrem.aov <- aov(df$salary_in_usd ~ df$remote_ratio)\nsummary(rem.aov)\n\n                 Df    Sum Sq   Mean Sq F value   Pr(>F)    \ndf$remote_ratio   2 1.155e+11 5.773e+10   12.43 5.19e-06 ***\nResiduals       585 2.718e+12 4.646e+09                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n유의수준 0.05에서 재택근무 비율별 연봉의 차이는 존재\n\n\n\n\n\n\n\n\ndf$company_size <- factor(df$company_size)\nbarplot(table(df$company_size), col=c(2:4), ylim=c(0,350), las=1)\n\n\n\n\n\n\n\n\nleveneTest(df$salary_in_usd ~ df$company_size)\n\nLevene's Test for Homogeneity of Variance (center = median)\n       Df F value    Pr(>F)    \ngroup   2  8.3059 0.0002774 ***\n      585                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n유의수준 0.05에서 회사 규모별 연봉은 등분산성가정을 따르지 않음\n\n\n\n\n\nbarplot(tapply(df$salary_in_usd, df$company_size, mean), col=c(2:4), ylim=c(0,150000), las=1)\n\n\n\n\n\n\n\n\noneway.test(df$salary_in_usd ~ df$company_size)\n\n\n    One-way analysis of means (not assuming equal variances)\n\ndata:  df$salary_in_usd and df$company_size\nF = 20.902, num df = 2.00, denom df = 213.86, p-value = 5.114e-09\n\n\n\n유의수준 0.05에서 재택근무 비율별 연봉의 차이는 존재\n\n\n\n\n\n\n\n\nplot(TukeyHSD(year.aov))\n\n\n\n\n\n\n\n\nlev.aov <- aov(df$salary_in_usd ~ df$experience_level)\nplot(TukeyHSD(lev.aov),las=1)\n\n\n\n\n\n\n\n\nplot(TukeyHSD(rem.aov), las=1)\n\n\n\n\n\n\n\n\ncomp.aov <- aov(df$salary_in_usd ~ df$company_size)\nplot(TukeyHSD(comp.aov),las=1)\n\n\n\n\n\n\n\n\n연봉 2022년 올랐음\n직급별 차이 물론 존재\n재택근무 All-No는 통계적으로 유의미한 차이X\n때때로 재택근무하는 사람의 연봉은 All, No에 비해 낮음\n회사규모 M-L 통계적으로 차이X"
  },
  {
    "objectID": "SleepStudy.html",
    "href": "SleepStudy.html",
    "title": "team4_Blue",
    "section": "",
    "text": "수면 습관이 수면 만족도에 미치는 영향\n목차 1. dataset 확인 및 분석 방향 설정\n2. 수치형 ~ 범주형 분석\n3. 범주형 ~ 범주형 분석\n4. 결론\n\n\n\n\n\ndf <- read.csv('./SleepStudyData.csv')\nstr(df)\n\n'data.frame':   104 obs. of  6 variables:\n $ Enough    : chr  \"Yes\" \"No\" \"Yes\" \"No\" ...\n $ Hours     : int  8 6 6 7 7 7 7 7 4 6 ...\n $ PhoneReach: chr  \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ PhoneTime : chr  \"Yes\" \"Yes\" \"Yes\" \"Yes\" ...\n $ Tired     : int  3 3 2 4 2 4 3 3 2 3 ...\n $ Breakfast : chr  \"Yes\" \"No\" \"Yes\" \"No\" ...\n\nbarplot(table(df$Enough),main='수면만족도')\n\n\n\n\n종속변수(범주형) : Enough\n독립변수(수치형) : Hours, Tired 2개의 변수는 수치형이지만 정도를 나타내는 범주형입니다. 로지스틱 회귀분석으로 P-value와 오즈비를 통해 관계를 분석하고, ROC-CURVE의 AUC를 이용해 모델의 신뢰도를 확인하겠습니다.\n독립변수(범주형) : PhoneReach, PhoneTime, Breakfast 4개의 변수가 2개의 범주(Yes,No)를 가지는 범주형 데이터이므로 카이 검정을 통해 크로스테이블을 생성하고, p-value를 통해 관계를 분석하겠습니다.\n\n\n\n결측치 확인 및 평균값으로 대체\n\nlibrary(VIM)\n\nLoading required package: colorspace\n\n\nLoading required package: grid\n\n\nVIM is ready to use.\n\n\nSuggestions and bug-reports can be submitted at: https://github.com/statistikat/VIM/issues\n\n\n\nAttaching package: 'VIM'\n\n\nThe following object is masked from 'package:datasets':\n\n    sleep\n\naggr(df, numbers=T,prop=F)\n\n\n\ndf$Hours[is.na(df$Hours)] <- mean(df$Hours, na.rm=TRUE)\n\n수면 시간은 반드시 존재하는 것이 명확하므로 삭제하지 않고 평균값으로 대체했습니다.\n이상치 확인\n\ndf$Enough <- factor(ifelse(df$Enough=='Yes',1,0))\ndf$PhoneReach <- factor(ifelse(df$PhoneReach=='Yes',1,0))\ndf$Breakfast <- factor(ifelse(df$Breakfast=='Yes',1,0))\ndf$PhoneTime <- factor(ifelse(df$PhoneTime=='Yes',1,0))\nboxplot(df)\n\n\n\nplot(df$PhoneTime) \n\n\n\n\n잠들기 전 30분 스마트폰 사용유무의 경우, 사용하지 않는다는 값이 20%를 차지하여 무시할 수 없다고 판단하여 그대로 사용했습니다.\n\n\n\n\n\n카이 검정\n\n\n\n\nlibrary(gmodels)\ndf$Enough[df$Enough=='Yes'] <-'수면만족'\n\nWarning in `[<-.factor`(`*tmp*`, df$Enough == \"Yes\", value = structure(c(2L, :\ninvalid factor level, NA generated\n\ndf$Enough[df$Enough=='No'] <-'수면불만족'\n\nWarning in `[<-.factor`(`*tmp*`, df$Enough == \"No\", value = structure(c(2L, :\ninvalid factor level, NA generated\n\ndf$Enough <- as.factor(df$Enough)\n\ndf$PhoneReach[df$PhoneReach=='Yes'] <-'손 닿는 거리'\n\nWarning in `[<-.factor`(`*tmp*`, df$PhoneReach == \"Yes\", value =\nstructure(c(2L, : invalid factor level, NA generated\n\ndf$PhoneReach[df$PhoneReach=='No'] <-'손 닿지 않는 거리'\n\nWarning in `[<-.factor`(`*tmp*`, df$PhoneReach == \"No\", value =\nstructure(c(2L, : invalid factor level, NA generated\n\ndf$PhoneReach <- as.factor(df$PhoneReach)\n\ndf$PhoneTime[df$PhoneTime == 'Yes'] <-'자기 전 30분 이내 스마트폰 사용 O'\n\nWarning in `[<-.factor`(`*tmp*`, df$PhoneTime == \"Yes\", value =\nstructure(c(2L, : invalid factor level, NA generated\n\ndf$PhoneTime[df$PhoneTime == 'No'] <-'자기 전 30분 이내 스마트폰 사용 X'\n\nWarning in `[<-.factor`(`*tmp*`, df$PhoneTime == \"No\", value = structure(c(2L, :\ninvalid factor level, NA generated\n\ndf$PhoneTime <- as.factor(df$PhoneTime)\n\ndf$Breakfast[df$Breakfast == 'Yes'] <-'평소 아침식사 O'\n\nWarning in `[<-.factor`(`*tmp*`, df$Breakfast == \"Yes\", value =\nstructure(c(2L, : invalid factor level, NA generated\n\ndf$Breakfast[df$Breakfast == 'No'] <-'평소 아침식사 X'\n\nWarning in `[<-.factor`(`*tmp*`, df$Breakfast == \"No\", value = structure(c(2L, :\ninvalid factor level, NA generated\n\ndf$Breakfast <- as.factor(df$Breakfast)\n\n\n\n\n\ntable(df$PhoneReach,df$Enough)\n\n   \n     0  1\n  0 19 13\n  1 49 23\n\nchisq.test(df$PhoneReach,df$Enough)\n\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  df$PhoneReach and df$Enough\nX-squared = 0.40389, df = 1, p-value = 0.5251\n\n\n\n\n\n\ntable(df$PhoneTime,df$Enough)\n\n   \n     0  1\n  0 13  7\n  1 55 29\n\nchisq.test(df$PhoneTime,df$Enough)\n\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  df$PhoneTime and df$Enough\nX-squared = 2.2981e-31, df = 1, p-value = 1\n\n\n\n\n\n\ntable(df$Breakfast,df$Enough)\n\n   \n     0  1\n  0 30 11\n  1 38 25\n\nchisq.test(df$Breakfast,df$Enough)\n\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  df$Breakfast and df$Enough\nX-squared = 1.2895, df = 1, p-value = 0.2561\n\n\n수면만족도 ~ 잠들 때, 스마트폰과의 접근성 : p-value > 0.05\n수면만족도 ~ 잠들기 30분 전 스마트폰 사용유무: p-value > 0.05\n수면만족도 ~ 평소 아침식사 습관 : p-value > 0.05\n모두 귀무가설(H0) 기각 불가능.\n해석:\n잘 때 손 닿는 곳에 스마트폰의 유무에 따라 수면 만족도는 “차이가 없다.”\n잠들기 전 30분, 스마트폰 사용에 따른 수면만족도는 “차이가 없다.”\n평소 아침식사 습관에 따른 수면만족도는 “차이가 없다.”\n\n\n\n\n\n로지스틱 회귀분석\n\n\n\n\nbarplot(table(df$Enough,df$Hours),,legend=(c('수면불만족','수면만족')))\n\n\n\nbarplot(table(df$Enough,df$Tired),legend=(c('수면불만족','수면만족')))\n\n\n\n\n최소 6시간 이상은 자야 수면만족이 시작된다.\n\nlibrary(rpart)\nlibrary(rpart.plot)\ntrain <- sample(1:100, 100)\ntree <- rpart(Enough~Hours+Tired, data= df, subset=train,method = \"class\")\nrpart.plot(tree)\n\n\n\n\n\n\n\n\nmodel <- glm(Enough~Hours+Tired,\n            family =binomial(link='logit'),\n            data = df)\nsummary(model)\n\n\nCall:\nglm(formula = Enough ~ Hours + Tired, family = binomial(link = \"logit\"), \n    data = df)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-1.6519  -0.6572  -0.4502   0.7218   2.3347  \n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  -2.8390     1.6622  -1.708 0.087650 .  \nHours         0.8382     0.2352   3.564 0.000365 ***\nTired        -1.2120     0.3222  -3.761 0.000169 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 134.167  on 103  degrees of freedom\nResidual deviance:  97.767  on 101  degrees of freedom\nAIC: 103.77\n\nNumber of Fisher Scoring iterations: 5\n\n\n\n\n\n\nexp(model$coefficients)\n\n(Intercept)       Hours       Tired \n  0.0584868   2.3123113   0.2975916 \n\nexp(confint(model))\n\nWaiting for profiling to be done...\n\n\n                  2.5 %    97.5 %\n(Intercept) 0.001869021 1.3573510\nHours       1.504924557 3.8203639\nTired       0.148762259 0.5326794\n\n\n\n\n\n\n\n\nlibrary(pROC)\n\nType 'citation(\"pROC\")' for a citation.\n\n\n\nAttaching package: 'pROC'\n\n\nThe following object is masked from 'package:gmodels':\n\n    ci\n\n\nThe following object is masked from 'package:colorspace':\n\n    coords\n\n\nThe following objects are masked from 'package:stats':\n\n    cov, smooth, var\n\nHours_roc <- roc(Enough~model$fitted.values, data =df)\n\nSetting levels: control = 0, case = 1\n\n\nSetting direction: controls < cases\n\nplot.roc(Hours_roc, col ='tomato',\n            print.auc = TRUE,\n            max.auc.polygon=TRUE)\n\n\n\n\n\n\n\n\n전체 데이터에서 train data, test data 만들기\ntrain data: 80%\ntest data : 20%\n\n\nset.seed(8)\ntest_index <- sample(1:dim(df)[1],as.integer(dim(df)[1] *0.2), replace = F )\ntest_index\n\n [1]  96  52  55  98  79  12  42   1  93  50   3   6  86 103  75  68   9  76  62\n[20]   7\n\ntrain_df <-df[-test_index,]\ntest_df <-df[test_index,]\ntrain_df\n\n    Enough     Hours PhoneReach PhoneTime Tired Breakfast\n2        0  6.000000          1         1     3         0\n4        0  7.000000          1         1     4         0\n5        0  7.000000          1         1     2         1\n8        0  7.000000          1         1     3         1\n10       0  6.000000          1         1     3         1\n11       0 10.000000          1         1     4         0\n13       1  7.000000          1         1     3         0\n14       1  8.000000          1         1     2         0\n15       1  7.000000          0         1     3         1\n16       1  8.000000          1         1     3         0\n17       1  6.000000          1         1     4         1\n18       1  8.000000          1         1     3         1\n19       0  9.000000          1         1     3         1\n20       1  8.000000          1         1     3         0\n21       0  2.000000          1         1     5         0\n22       0  4.000000          1         1     2         1\n23       0  5.000000          1         0     3         1\n24       0  7.000000          1         0     3         1\n25       0  5.000000          1         1     2         0\n26       0  7.000000          0         1     5         0\n27       0  6.000000          1         1     3         0\n28       0  6.000000          1         1     2         0\n29       1  7.000000          1         0     2         1\n30       1  9.000000          0         0     2         1\n31       1  8.000000          1         1     2         1\n32       0  8.000000          0         1     3         1\n33       0  6.000000          1         1     4         0\n34       0  6.000000          0         0     3         0\n35       0  7.000000          0         1     3         1\n36       0  7.000000          1         1     3         1\n37       1  7.000000          0         0     2         1\n38       1  9.000000          0         1     2         1\n39       0  5.000000          1         0     5         0\n40       0  7.000000          1         1     2         0\n41       1  8.000000          0         1     1         1\n43       0  5.000000          1         1     3         0\n44       0  6.000000          1         1     3         1\n45       0  4.000000          0         0     5         0\n46       0  7.000000          1         1     4         0\n47       1  9.000000          1         1     1         1\n48       0  5.000000          0         0     5         1\n49       0  6.000000          0         1     3         1\n51       0  5.000000          1         0     3         0\n53       0  7.000000          0         1     4         1\n54       0  5.000000          1         1     2         0\n56       0  5.000000          0         1     2         1\n57       0  6.000000          1         1     3         0\n58       0  9.000000          0         1     5         0\n59       0  9.000000          1         0     4         1\n60       1  7.000000          1         1     2         0\n61       0  6.000000          1         1     3         0\n63       0  2.000000          0         0     5         0\n64       0  8.000000          1         1     5         0\n65       0  7.000000          1         1     4         1\n66       0  6.656863          1         0     3         1\n67       1  7.000000          1         0     1         0\n69       1  7.000000          1         0     3         0\n70       0  6.000000          1         1     3         1\n71       1  6.000000          0         1     4         1\n72       0  5.000000          1         1     4         1\n73       0  5.000000          1         1     4         0\n74       0  6.000000          0         1     5         1\n77       0  8.000000          1         1     4         1\n78       1  6.000000          1         1     4         0\n80       0  7.000000          1         1     4         0\n81       1  6.000000          1         1     3         0\n82       0  6.000000          1         1     3         0\n83       0  5.000000          0         0     4         0\n84       1  8.000000          0         0     2         1\n85       1  8.000000          0         1     1         1\n87       0  9.000000          0         1     5         1\n88       0  5.000000          1         0     4         1\n89       0  6.000000          1         0     2         1\n90       1  8.000000          0         1     3         1\n91       0  7.000000          0         1     4         1\n92       1  6.656863          0         1     2         1\n94       1  9.000000          0         0     2         1\n95       1  8.000000          1         1     4         0\n97       0  7.000000          1         1     4         1\n99       0  6.000000          1         1     3         0\n100      0  7.000000          1         1     2         1\n101      0  7.000000          0         1     3         1\n102      1  8.000000          1         1     3         1\n104      1  6.000000          1         1     3         1\n\ntest_df\n\n    Enough Hours PhoneReach PhoneTime Tired Breakfast\n96       1     7          0         1     2         1\n52       0     8          1         1     3         1\n55       0     7          1         1     3         1\n98       1     7          1         1     2         0\n79       0     6          1         1     3         1\n12       0     7          1         1     2         1\n42       0     7          0         1     4         1\n1        1     8          1         1     3         1\n93       1     7          0         1     2         1\n50       0     4          1         1     2         1\n3        1     6          1         1     2         1\n6        0     7          1         1     4         0\n86       0     6          1         1     3         0\n103      1     7          1         1     2         1\n75       1     7          1         1     4         1\n68       0     7          1         1     3         1\n9        0     4          0         1     2         1\n76       0     6          0         1     4         0\n62       0     7          1         1     3         1\n7        1     7          1         1     3         1\n\n\nROC_CURVE(test data ~ train data)\n\npar(mfrow=c(1,2))\nmodel_train <- glm(Enough~Hours+Tired,\n            family =binomial(link='logit'),\n            data =  train_df)\n\nHours_roc <- roc(Enough~model_train$fitted.values, data =train_df)\n\nSetting levels: control = 0, case = 1\n\n\nSetting direction: controls < cases\n\nplot.roc(Hours_roc, col ='tomato',\n            print.auc = TRUE,\n            max.auc.polygon=TRUE)            \n\npred_p <- predict(model_train,test_df[,-1],type = 'response')\npred_p\n\n        96         52         55         98         79         12         42 \n0.61910851 0.53456156 0.34191171 0.61910851 0.19030337 0.61910851 0.14241937 \n         1         93         50          3          6         86        103 \n0.53456156 0.61910851 0.13078966 0.42372811 0.14241937 0.19030337 0.61910851 \n        75         68          9         76         62          7 \n0.14241937 0.34191171 0.13078966 0.06987619 0.34191171 0.34191171 \n\nHours_roc <- roc(test_df$Enough ~ pred_p)\n\nSetting levels: control = 0, case = 1\nSetting direction: controls < cases\n\nplot.roc(Hours_roc, col ='tomato', \n            print.auc = TRUE,\n            max.auc.polygon=TRUE)\n\n\n\npar(mfrow=c(1,2))\n\nROC_CURVE(train data) AUC: 0.819\nROC_CURVE(train data) AUC: 0.822\nROC_CURVE(test data ) AUC: 0.823\n분류기의 AUC범위가 0.8 ~ 0.9에 속해 B등급으로 우수한 분류기임을 확인할 수 있습니다.\n\n\n\n\nt.test(df$Hours~df$Enough)\n\n\n    Welch Two Sample t-test\n\ndata:  df$Hours by df$Enough\nt = -4.7177, df = 99.485, p-value = 7.8e-06\nalternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0\n95 percent confidence interval:\n -1.5697137 -0.6402697\nsample estimates:\nmean in group 0 mean in group 1 \n       6.274366        7.379357 \n\nt.test(df$Tired~df$Enough)\n\n\n    Welch Two Sample t-test\n\ndata:  df$Tired by df$Enough\nt = 4.7428, df = 76.236, p-value = 9.62e-06\nalternative hypothesis: true difference in means between group 0 and group 1 is not equal to 0\n95 percent confidence interval:\n 0.5118405 1.2528654\nsample estimates:\nmean in group 0 mean in group 1 \n       3.382353        2.500000 \n\n\n수면 만족하는 사람과 만족하지 않은 사람 두 그룹간 비교\n\nP-value <0.05 이므로 그룹간 수면 시간의 평균 차이가 있다.\n\nP-value <0.05 이므로 하루 피곤함정도의 평균 차이가 있다.\n\n\n\n\n\n개인이 체감하는 수면 만족도의 경우, 수면의 질보다 수면 시간이 더 큰 영향을 미친다."
  }
]